
    /*
    *  This file is generated by apiTypes.js
    *  Do not edit manually!
    */
    /* eslint-disable @typescript-eslint/naming-convention -- Some API fields are temporarily in `snake_case`. (TODO: OPW-2996) */
    /* eslint-disable @typescript-eslint/no-empty-interface -- Some parts of the spec allow `any` content. */
    /* eslint-disable @typescript-eslint/no-explicit-any -- Some parts of the spec allow `any` content. */
    /* eslint-disable @typescript-eslint/no-namespace -- There is no getting around generating namespaces with this tool. */

    export declare namespace OCApi {
    export interface CookieParameters {
        GVID: Parameters.GVID;
    }
    export interface HeaderParameters {
        "Accept-Language"?: Parameters.AcceptLanguage;
        "Content-Type"?: Parameters.ContentType;
        "User-Agent"?: Parameters.UserAgent;
        "Ocp-Apim-Subscription-Key"?: Parameters.OcpApimSubscriptionKey /* uuid */;
        "X-Admin-Key"?: Parameters.XAdminKey;
    }
    namespace Parameters {
        export type AcceptLanguage = string;
        export type AccountId = string;
        export type Category = string;
        export type ConditionLabel = string; // ^[a-z0-9_]+$
        export type ConditionLegacy = string; // ^[a-z0-9_-]+$
        export type ContentType = string;
        export type CouponId = string;
        export type DeliveryType = "Retail" | "MailOrder";
        export type GVID = string;
        export type ImageId = number;
        export type Limit = number;
        export type Name = string;
        export type Ndc = string;
        export type OcpApimSubscriptionKey = string; // uuid
        export type Page = number;
        export type PatientId = number;
        export type PatientName = string; // uuid
        export type PaymentMethodName = string;
        export type PharmacyId = string;
        export type PharmacyName = string;
        export type PiSecret = string; // ^[a-z0-9_]+$
        export type PromoCode = string;
        export type Reset = string;
        export type SearchQuery = string;
        export type UrlSlug = string; // ^[a-z0-9-]+$
        export type UserAgent = string;
        export type UtmCampaign = string;
        export type UtmContent = string;
        export type UtmMedium = string;
        export type UtmSource = string;
        export type UtmTerm = string;
        export type VisitId = string; // uuid
        export type XAdminKey = string;
        export type ZipCode = string;
    }
    export interface PathParameters {
        "visit-id": Parameters.VisitId /* uuid */;
        "account-id": Parameters.AccountId;
        "pharmacy-id": Parameters.PharmacyId;
        "pi-secret": Parameters.PiSecret /* ^[a-z0-9_]+$ */;
        "payment-method-name"?: Parameters.PaymentMethodName;
        "url-slug": Parameters.UrlSlug /* ^[a-z0-9-]+$ */;
        "coupon-id": Parameters.CouponId;
        "condition-legacy": Parameters.ConditionLegacy /* ^[a-z0-9_-]+$ */;
        "condition-label": Parameters.ConditionLabel /* ^[a-z0-9_]+$ */;
        "patient-id": Parameters.PatientId;
        "promo-code": Parameters.PromoCode;
        "patient-name": Parameters.PatientName /* uuid */;
    }
    export interface QueryParameters {
        category?: Parameters.Category;
        deliveryType?: Parameters.DeliveryType;
        imageId: Parameters.ImageId;
        pharmacyName?: Parameters.PharmacyName;
        ndc?: Parameters.Ndc;
        zipCode?: Parameters.ZipCode;
        searchQuery?: Parameters.SearchQuery;
        name?: Parameters.Name;
        utmSource?: Parameters.UtmSource;
        utmMedium?: Parameters.UtmMedium;
        utmCampaign?: Parameters.UtmCampaign;
        utmTerm?: Parameters.UtmTerm;
        utmContent?: Parameters.UtmContent;
        page?: Parameters.Page;
        limit?: Parameters.Limit;
        reset?: Parameters.Reset;
    }
    namespace Responses {
        export type Error400Response = /**
         * Bad Request
         * example:
         * {
         *   "status": 400,
         *   "message": "Bad Request"
         * }
         */
        Schemas.Error400BadRequest;
        export type Error401Response = /**
         * The request is missing a valid token.
         * example:
         * {
         *   "status": 401,
         *   "message": "Unauthorized"
         * }
         */
        Schemas.Error401Unauthorized;
        export type Error403Response = /**
         * Forbidden
         * example:
         * {
         *   "status": 403,
         *   "message": "403 Forbidden"
         * }
         */
        Schemas.Error403Forbidden;
        export type Error404Response = /**
         * The requested resource was not found.
         * example:
         * {
         *   "status": 404,
         *   "message": "Resource not found"
         * }
         */
        Schemas.Error404NotFound;
    }
    namespace Schemas {
        /**
         * example:
         * {
         *   "email": "bob@aol.com",
         *   "fullName": "Bob Frog",
         *   "insuranceCarrier": "Blue Cross",
         *   "insuranceGroup": "BC-Plus",
         *   "insuranceGroupId": "45-768393F",
         *   "insuranceId": "123485690F",
         *   "mobilePhone": "555.555.5555",
         *   "phone": "123.456.5555",
         *   "smsNotify": true,
         *   "canChangePassword": true,
         *   "profileContent": {
         *     "allergiesLink": "Allergies",
         *     "documentTitle": "Patient Profile",
         *     "medicationsLink": "Medications",
         *     "patientDashboardLink": "Patient Dashboard",
         *     "patientDetailsLink": "Patient Details",
         *     "visitHistoryLink": "Visit History"
         *   },
         *   "accountContent": {
         *     "profilePersonalInformation": "Personal information",
         *     "accountInsuranceInformation": "Insurance information"
         *   },
         *   "address": {
         *     "id": 2910336,
         *     "address1": "1049 Moore Grove",
         *     "address2": null,
         *     "city": "Minneapolis",
         *     "country": null,
         *     "phone": "(202)345-6789",
         *     "state": "MN",
         *     "zip": "55401",
         *     "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
         *     "latitude": 44.9836543,
         *     "longitude": -93.2693572
         *   }
         * }
         */
        export interface Account {
            email?: string; // email
            fullName?: string;
            insuranceCarrier?: string;
            insuranceGroup?: string;
            insuranceGroupId?: string;
            insuranceId?: string;
            mobilePhone?: string;
            phone?: string;
            smsNotify?: boolean;
            canChangePassword?: boolean;
            /**
             * Source: Fabric content.patient_profile
             */
            profileContent?: {
                allergiesLink?: string;
                documentTitle?: string;
                medicationsLink?: string;
                patientDashboardLink?: string;
                patientDetailsLink?: string;
                visitHistoryLink?: string;
            };
            /**
             * Source: Fabric content.client_content
             */
            accountContent?: {
                profilePersonalInformation?: string;
                accountInsuranceInformation?: string;
            };
            address?: /**
             * Source: Fabric content.patient_profile
             * example:
             * {
             *   "id": 2910336,
             *   "address1": "1049 Moore Grove",
             *   "address2": null,
             *   "city": "Minneapolis",
             *   "country": null,
             *   "phone": "(202)345-6789",
             *   "state": "MN",
             *   "zip": "55401",
             *   "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
             *   "latitude": 44.9836543,
             *   "longitude": -93.2693572
             * }
             */
            AccountAddress;
        }
        /**
         * Source: Fabric content.patient_profile
         * example:
         * {
         *   "id": 2910336,
         *   "address1": "1049 Moore Grove",
         *   "address2": null,
         *   "city": "Minneapolis",
         *   "country": null,
         *   "phone": "(202)345-6789",
         *   "state": "MN",
         *   "zip": "55401",
         *   "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
         *   "latitude": 44.9836543,
         *   "longitude": -93.2693572
         * }
         */
        export interface AccountAddress {
            id?: number;
            address1?: string;
            address2?: string | null;
            city?: string;
            country?: string | null;
            /**
             * A 10-digit phone number
             */
            phone?: string | null; // ^\(\d{3}\)\d{3}-\d{4}$
            state?: string;
            zip?: string;
            fullAddress?: string;
            latitude?: number | null;
            longitude?: number | null;
        }
        /**
         * The is used to update the account profile.
         *
         * example:
         * {
         *   "fullName": "Muhammad Rehman",
         *   "phone": "(509)530-1766",
         *   "email": "mrehman+1@rvohaealth.com",
         *   "address": {
         *     "id": 2910336,
         *     "address1": "1049 Moore Grove",
         *     "address2": null,
         *     "city": "Minneapolis",
         *     "country": null,
         *     "phone": "(202)345-6789",
         *     "state": "MN",
         *     "zip": "55401",
         *     "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
         *     "latitude": 44.9836543,
         *     "longitude": -93.2693572
         *   }
         * }
         */
        export interface AccountUpdate {
            fullName?: string;
            /**
             * A 10-digit phone number
             */
            phone?: string; // ^\(\d{3}\)\d{3}-\d{4}$
            insuranceCarrier?: string;
            insuranceId?: string;
            email?: string; // email
            address?: /**
             * Source: Fabric content.patient_profile
             * example:
             * {
             *   "id": 2910336,
             *   "address1": "1049 Moore Grove",
             *   "address2": null,
             *   "city": "Minneapolis",
             *   "country": null,
             *   "phone": "(202)345-6789",
             *   "state": "MN",
             *   "zip": "55401",
             *   "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
             *   "latitude": 44.9836543,
             *   "longitude": -93.2693572
             * }
             */
            AccountAddress;
        }
        /**
         * example:
         * {
         *   "continue": {
         *     "actionLabel": "Continue"
         *   },
         *   "goBack": {
         *     "actionLabel": "Back"
         *   }
         * }
         */
        export interface Action {
            continue?: {
                actionLabel?: "Continue" | "Select";
            };
            goBack?: {
                actionLabel?: "Back";
            };
        }
        /**
         * The is used to update the user profile.
         *
         * example:
         * {
         *   "hsid": "1234-5678-9012",
         *   "email": "bob@aaol.com",
         *   "phone": "555-555-5555",
         *   "firstName": "Bob",
         *   "lastName": "Frog"
         * }
         */
        export interface Adb2cClaimsUpdate {
            hsid: string;
            email?: string; // email
            phone?: string;
            firstName?: string;
            lastName?: string;
        }
        /**
         * The token is used to authenticate the user for the duration of the tokenExpires time.
         * The token is used in the header for all requests that require authentication.
         *
         * example:
         * {
         *   "token": "ZTU0YTNkOTYtNTE1Ni00YTE0LWFiZDQtYzI2ZjdlYmVmYmQ5"
         * }
         */
        export interface Adb2cToken {
            token?: string; // byte
        }
        /**
         * example:
         * {
         *   "addressLine1": "TEST MAIN",
         *   "addressLine2": "Suite 102",
         *   "city": "MINNEAPOLIS",
         *   "country": "USA",
         *   "state": "MN",
         *   "zipCode": "55401",
         *   "phoneNumber": "256-555-5555"
         * }
         */
        export interface Address {
            addressLine1: string;
            addressLine2?: string;
            city: string;
            state: string;
            zipCode: string;
            country?: string;
            phoneNumber: string;
        }
        /**
         * example:
         * {
         *   "id": 3075,
         *   "state": "active",
         *   "allergyId": "2006808",
         *   "name": "Tylenol",
         *   "externalAllergyId": null,
         *   "externalCode": null
         * }
         */
        export interface Allergy {
            id?: number;
            state?: string;
            allergyId?: string;
            name?: string;
            externalAllergyId?: string | null;
            externalCode?: string | null;
        }
        /**
         * List of allergies and medications for the given patient
         * example:
         * {
         *   "allergies": [
         *     {
         *       "id": 3075,
         *       "state": "active",
         *       "allergyId": "2006808",
         *       "name": "Tylenol",
         *       "externalAllergyId": null,
         *       "externalCode": null
         *     }
         *   ],
         *   "medications": [
         *     {
         *       "id": 5006,
         *       "medicationId": "6171233",
         *       "name": "Briviact oral",
         *       "state": "active",
         *       "externalMedicationId": null,
         *       "externalCode": null
         *     }
         *   ]
         * }
         */
        export interface AllergyMedicationPayload {
            allergies?: /**
             * example:
             * {
             *   "id": 3075,
             *   "state": "active",
             *   "allergyId": "2006808",
             *   "name": "Tylenol",
             *   "externalAllergyId": null,
             *   "externalCode": null
             * }
             */
            Allergy[];
            medications?: /**
             * example:
             * {
             *   "id": 5006,
             *   "medicationId": "6171233",
             *   "name": "Briviact oral",
             *   "state": "active",
             *   "externalMedicationId": null,
             *   "externalCode": null
             * }
             */
            Medication[];
        }
        /**
         * example:
         * {
         *   "open": {
         *     "day": "Monday",
         *     "time": "8:00"
         *   },
         *   "close": {
         *     "day": "Monday",
         *     "time": "18:00"
         *   }
         * }
         */
        export interface BusinessHours {
            open?: {
                day?: string;
                time?: string; // date-time
            };
            close?: {
                day?: string;
                time?: string; // date-time
            };
        }
        /**
         * example:
         * {
         *   "conditionDetails": {
         *     "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
         *     "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
         *     "icon": {
         *       "imageUrl": "https://example.com/image.png",
         *       "darkModeImageUrl": "https://example.com/dark-mode-image.png",
         *       "altText": "An example icon"
         *     },
         *     "ctaButton": "Questionnaire for hair loss",
         *     "label": "cp_9q_449a_acne",
         *     "urlSlug": "allergies",
         *     "name": "Allergic Rhinitis",
         *     "commonName": "Allergies"
         *   },
         *   "fulfillmentOptions": {
         *     "homeDelivery": {
         *       "drugNames": [
         *         "Minoxidil",
         *         "Finasteride"
         *       ],
         *       "priceRange": {
         *         "label": "Total cost",
         *         "minPrice": {
         *           "amount": "10.50",
         *           "currency": "USD",
         *           "display": "$10.50"
         *         },
         *         "maxPrice": {
         *           "amount": "20.50",
         *           "currency": "USD",
         *           "display": "$20.50"
         *         }
         *       }
         *     },
         *     "retail": {
         *       "drugNames": [
         *         "Minoxidil",
         *         "Finasteride"
         *       ],
         *       "priceRange": {
         *         "label": "Total cost",
         *         "minPrice": {
         *           "amount": "8.50",
         *           "currency": "USD",
         *           "display": "$8.50"
         *         },
         *         "maxPrice": {
         *           "amount": "19.50",
         *           "currency": "USD",
         *           "display": "$19.50"
         *         }
         *       }
         *     }
         *   },
         *   "treatmentOptions": [
         *     {
         *       "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
         *       "commonName": "Minoxidil",
         *       "urlSlug": "minoxidil",
         *       "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
         *       "price": {
         *         "amount": "8.50",
         *         "currency": "USD",
         *         "display": "$8.50"
         *       },
         *       "quantity": 30,
         *       "drugType": "BRAND",
         *       "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
         *     }
         *   ]
         * }
         */
        export interface Condition {
            conditionDetails?: /**
             * example:
             * {
             *   "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
             *   "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
             *   "icon": {
             *     "imageUrl": "https://example.com/image.png",
             *     "darkModeImageUrl": "https://example.com/dark-mode-image.png",
             *     "altText": "An example icon"
             *   },
             *   "ctaButton": "Questionnaire for hair loss",
             *   "label": "cp_9q_449a_acne",
             *   "urlSlug": "allergies",
             *   "name": "Allergic Rhinitis",
             *   "commonName": "Allergies"
             * }
             */
            ConditionDetails;
            fulfillmentOptions?: /**
             * example:
             * {
             *   "homeDelivery": {
             *     "drugNames": [
             *       "Minoxidil",
             *       "Finasteride"
             *     ],
             *     "priceRange": {
             *       "label": "Total cost",
             *       "minPrice": {
             *         "amount": "10.50",
             *         "currency": "USD",
             *         "display": "$10.50"
             *       },
             *       "maxPrice": {
             *         "amount": "20.50",
             *         "currency": "USD",
             *         "display": "$20.50"
             *       }
             *     }
             *   },
             *   "retail": {
             *     "drugNames": [
             *       "Minoxidil",
             *       "Finasteride"
             *     ],
             *     "priceRange": {
             *       "label": "Total cost",
             *       "minPrice": {
             *         "amount": "8.50",
             *         "currency": "USD",
             *         "display": "$8.50"
             *       },
             *       "maxPrice": {
             *         "amount": "19.50",
             *         "currency": "USD",
             *         "display": "$19.50"
             *       }
             *     }
             *   }
             * }
             */
            FulfillmentOptions;
            treatmentOptions?: /**
             * example:
             * [
             *   {
             *     "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
             *     "commonName": "Minoxidil",
             *     "urlSlug": "minoxidil",
             *     "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
             *     "price": {
             *       "amount": "8.50",
             *       "currency": "USD",
             *       "display": "$8.50"
             *     },
             *     "quantity": 30,
             *     "drugType": "BRAND",
             *     "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
             *   }
             * ]
             */
            TreatmentOptions;
        }
        /**
         * example:
         * {
         *   "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
         *   "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
         *   "icon": {
         *     "imageUrl": "https://example.com/image.png",
         *     "darkModeImageUrl": "https://example.com/dark-mode-image.png",
         *     "altText": "An example icon"
         *   },
         *   "ctaButton": "Questionnaire for hair loss",
         *   "label": "cp_9q_449a_acne",
         *   "urlSlug": "allergies",
         *   "name": "Allergic Rhinitis",
         *   "commonName": "Allergies"
         * }
         */
        export interface ConditionDetails {
            /**
             * Source: fabricCondition.content.page_heading string
             *
             * example:
             * Get fast, convenient care for acne. No appointment needed.
             */
            heading: string;
            /**
             * Source: fabricCondition.content.wysk_body & treatment_plan_expectation_text string
             *
             * example:
             * Acne is a common skin condition that occurs when hair follicles become clogged with oil and dead skin cells. This can result in various types of blemishes, including pimples, blackheads, whiteheads, and in some cases, deeper cysts or nodules. Acne typically affects areas with a high concentration of oil glands, such as the face, chest, and back.
             */
            description: string;
            /**
             * Source: perksCondition.heroIcon
             * OR fabricCondition.content.primary_image_path If Perks is unavalible
             *
             */
            icon?: /**
             * example:
             * {
             *   "imageUrl": "https://example.com/image.png",
             *   "darkModeImageUrl": "https://example.com/dark-mode-image.png",
             *   "altText": "An example icon"
             * }
             */
            ImageUrl;
            /**
             * Source: fabricCondition.content.start_today_heading
             *
             * example:
             * Questionnaire for hair loss
             */
            ctaButton?: string;
            /**
             * Primary Key
             * Source: fabricCondition.label
             * This label is the primary key for Fabric's Clinical Conditions.
             *
             * example:
             * cp_9q_449a_acne
             */
            label: string;
            /**
             * Source: perksCondition.urlSlug
             * OR convert fabricCondition.name into slug
             * A stable identifier for this health condition.
             * URL slugs must be URL-safe:
             * lower case letters (a-z), numbers (0-9), and dashes (-) only.
             *
             * example:
             * allergies
             */
            urlSlug?: string; // ^[a-z0-9-]+$
            /**
             * Source: fabricCondition.name
             * The clinical name for this condition.
             *
             * example:
             * Allergic Rhinitis
             */
            name: string;
            /**
             * Source: perksCondition.name
             * The alternate clinical name for this condition.
             *
             * example:
             * Allergic Rhinitis
             */
            alternateName?: string;
            /**
             * Source: perksCondition.commonName OR fabricCondition.name
             * Name the condition is commonly known as.  If Perks is not available
             * Fabric name will be used.
             *
             * example:
             * Allergies
             */
            commonName?: string;
        }
        /**
         * example:
         * [
         *   {
         *     "name": "Cold, flu, COVID-19",
         *     "fabricId": 40,
         *     "conditions": [
         *       {
         *         "label": "cp_12q_449a_covid19coronavirus",
         *         "name": "COVID-19",
         *         "primaryDescription": "Evaluation of COVID-19 (coronavirus)",
         *         "primaryImagePath": "/PatientInterface/Conditions/covid-a.webp"
         *       },
         *       {
         *         "label": "cp_12q_449a_respiratory",
         *         "name": "Cold, sinus infection, or flu",
         *         "primaryDescription": "Stuffy or runny nose, cough, sore throat, headache, fever, or muscle aches",
         *         "primaryImagePath": "/PatientInterface/Conditions/uri-a.webp",
         *         "urlSlug": "cold"
         *       },
         *       {
         *         "label": "cp_184q_449a_reason",
         *         "name": "COVID-19 treatments",
         *         "primaryDescription": "Evaluation for COVID-19 treatment for those with a confirmed diagnosis of COVID-19",
         *         "primaryImagePath": "/PatientInterface/Conditions/paxlovid-a.webp",
         *         "urlSlug": "covid-19"
         *       },
         *       {
         *         "label": "cp_41q_449a_reason",
         *         "name": "Flu exposure",
         *         "primaryDescription": "Medication to prevent the flu after a close contact exposure (not for active symptoms)",
         *         "primaryImagePath": "/PatientInterface/Conditions/fluexposure-a.webp",
         *         "urlSlug": "flu"
         *       },
         *       {
         *         "label": "cp_171q_449a_reason",
         *         "name": "Post-COVID discharge (video required)",
         *         "primaryDescription": "COVID-19 (coronavirus) follow-up after being discharged from the hospital or clinic",
         *         "primaryImagePath": "/PatientInterface/Conditions/postcoviddischarge-a.webp",
         *         "urlSlug": "post-covid"
         *       },
         *       {
         *         "label": "cp_42q_449a_reason",
         *         "name": "Whooping cough exposure",
         *         "primaryDescription": "Medication to prevent whooping cough after close contact with a person with the illness",
         *         "primaryImagePath": "/PatientInterface/Conditions/whoopingcough-a.webp",
         *         "urlSlug": "whooping-cough"
         *       }
         *     ]
         *   }
         * ]
         */
        export type ConditionListByCategory = {
            /**
             * Category Name
             * example:
             * Cold, flu, COVID-19
             */
            name?: string;
            /**
             * Fabric Id for category
             * example:
             * 40
             */
            fabricId?: number;
            conditions?: /**
             * example:
             * {
             *   "label": "cp_12q_449a_covid19coronavirus",
             *   "name": "COVID-19",
             *   "primaryDescription": "Evaluation of COVID-19 (coronavirus)",
             *   "primaryImagePath": "/PatientInterface/Conditions/covid-a.webp"
             * }
             */
            ConditionSummary[];
        }[];
        /**
         * example:
         * {
         *   "rows": [
         *     {
         *       "id": 3139,
         *       "name": "Acute Tenosynovitis",
         *       "commonName": "Tenosynovitis",
         *       "urlSlug": "tenosynovitis",
         *       "fabricLabel": "cp_7q_449a_bladderinfection"
         *     }
         *   ]
         * }
         */
        export interface ConditionMappingCsv {
            rows?: {
                /**
                 * example:
                 * 3139
                 */
                id: number;
                /**
                 * example:
                 * Acute Tenosynovitis
                 */
                name: string;
                /**
                 * example:
                 * Tenosynovitis
                 */
                commonName: string;
                /**
                 * example:
                 * tenosynovitis
                 */
                urlSlug: string;
                /**
                 * example:
                 * cp_7q_449a_bladderinfection
                 */
                fabricLabel: string;
            }[];
        }
        /**
         * example:
         * {
         *   "label": "cp_12q_449a_covid19coronavirus",
         *   "name": "COVID-19",
         *   "primaryDescription": "Evaluation of COVID-19 (coronavirus)",
         *   "primaryImagePath": "/PatientInterface/Conditions/covid-a.webp"
         * }
         */
        export interface ConditionSummary {
            /**
             * example:
             * cp_9q_449a_acne
             */
            label?: string;
            /**
             * The clinical name for this condition.
             * example:
             * Allergic Rhinitis
             */
            name?: string;
            /**
             * example:
             * Cold, sinus infection, or sore throat
             */
            primaryDescription?: string;
            /**
             * example:
             * /PatientInterface/Conditions/acne-a.webp
             */
            primaryImagePath?: string;
            /**
             * A stable identifier for this health condition. URL slugs must be URL-safe: lower case letters (a-z), numbers (0-9), and dashes (-) only.
             *
             * example:
             * allergies
             */
            urlSlug?: string;
        }
        export interface ContentLabels {
            formTitle?: string;
            forMyselfOption?: string;
            forSomeoneOption?: string;
            aboutYourselfText?: string;
            ageLabel?: string;
            locationLabel?: string;
            aboutPatientText?: string;
            continueButton?: string;
            dropdownStatePlaceholder?: string;
            dropdownStateNotListed?: string;
            myAgeLabel?: string;
            backButton?: string;
            personalSex?: string;
            sex?: {
                female?: "Female";
                male?: "Male";
            };
            states?: {
                abbreviation?: string;
                name?: string;
            }[];
        }
        /**
         * It includes the discount coupons details.
         *
         * example:
         * {
         *   "pcn": "CLAIMCR",
         *   "bin": "005947",
         *   "uid": "APD1066745",
         *   "grp": "1858CCC"
         * }
         */
        export interface DiscountCard {
            /**
             * Maps to Fabric discount_card_pcn, only for retail
             * Processor Control Number for the discount card.
             *
             */
            pcn?: string;
            /**
             * Maps to Fabric discount_card_bin, only for retail
             * BIN number for the discount card.
             *
             */
            bin?: string;
            /**
             * Maps to Fabric discount_card_cardholder_id, only for retail
             * Unique identifier for the user, usually assigned by the system.
             *
             */
            uid?: string;
            /**
             * Maps to Fabric discount_card_group_id, only for retail
             * Group code for the discount card.
             *
             */
            grp?: string;
        }
        /**
         * example:
         * {
         *   "perksId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
         *   "name": "Minoxidil",
         *   "drugType": "brand",
         *   "urlSlug": "atorvastatin",
         *   "variants": [
         *     {
         *       "perksId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
         *       "urlSlug": "atorvastatin",
         *       "name": "Lipitor",
         *       "drugType": "brand"
         *     }
         *   ],
         *   "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
         *   "price": {
         *     "amount": "10.50",
         *     "currency": "USD",
         *     "display": "$10.50"
         *   },
         *   "quantity": 50,
         *   "ndc": "40085031530",
         *   "protocol": "Acne and rosacea",
         *   "drugDescription": "erythromycin with ethanol (Erygel) 2 % topical gel",
         *   "daysSupply": 30,
         *   "refillCount": 3,
         *   "drugForm": "gel",
         *   "strength": "2",
         *   "strengthQualifier": "%",
         *   "sig": "Apply to the affected skin 2 times per day",
         *   "cpid": 9,
         *   "unitPrice": 74.86
         * }
         */
        export interface Drug {
            /**
             * example:
             * 84b18721-2493-4a31-a5ad-4d81dc1647e4
             */
            perksId?: string; // uuid
            /**
             * example:
             * Minoxidil
             */
            name?: string;
            drugType?: /**
             * Backwards Compatibility Note:** If an unrecognized `drugType` is received by the client, `brand` should be assumed.
             *
             * example:
             * generic
             */
            DrugType;
            /**
             * example:
             * atorvastatin
             */
            urlSlug?: string;
            variants?: {
                /**
                 * example:
                 * 84b18721-2493-4a31-a5ad-4d81dc1647e4
                 */
                perksId?: string; // uuid
                /**
                 * example:
                 * atorvastatin
                 */
                urlSlug?: string;
                /**
                 * example:
                 * Lipitor
                 */
                name?: string;
                drugType?: /**
                 * Backwards Compatibility Note:** If an unrecognized `drugType` is received by the client, `brand` should be assumed.
                 *
                 * example:
                 * generic
                 */
                DrugType;
            }[];
            /**
             * example:
             * 84b18721-2493-4a31-a5ad-4d81dc1647e4
             */
            formulationId?: string; // uuid
            price?: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
            /**
             * The quantity that was used to calculate the price for this formulation.
             * example:
             * 30
             */
            quantity?: number; // double
            /**
             * example:
             * General skin conditions
             */
            protocol?: string;
            /**
             * example:
             * 12345678900
             */
            ndc?: string;
            /**
             * example:
             * Lorem ispum dilor sit amet.
             */
            drugDescription?: string;
            /**
             * example:
             * 30
             */
            daysSupply?: number;
            /**
             * example:
             * 3
             */
            refillCount?: number;
            /**
             * example:
             * foam
             */
            drugForm?: string;
            /**
             * example:
             * 15
             * 0.3-2.5
             */
            strength?: string;
            /**
             * example:
             * %
             */
            strengthQualifier?: string;
            /**
             * example:
             * Apply to the affected skin 2 times per day
             */
            sig?: string;
            /**
             * example:
             * 49
             */
            cpid?: number;
            /**
             * example:
             * 27.95
             */
            unitPrice?: number;
        }
        /**
         * example:
         * {
         *   "rows": [
         *     {
         *       "protocol": "Acne and rosacea",
         *       "ndc": "66993095931",
         *       "drug_description": "clindamycin-tretinoin (Ziana) 1.2-0.025 % topical gel",
         *       "quantity": "1",
         *       "days_supply": "30",
         *       "refill_count": "3",
         *       "drug_form": "gel",
         *       "strength": "1.2-0.025",
         *       "strength_qualifier": "%",
         *       "sig": "Apply to the affected skin 1 time per day at bedtime",
         *       "cpid": "9",
         *       "unit_price": "88.4"
         *     }
         *   ]
         * }
         */
        export interface DrugListCsv {
            rows?: {
                /**
                 * example:
                 * 123
                 */
                protocol: string;
                /**
                 * example:
                 * 12345678900
                 */
                ndc: string;
                /**
                 * example:
                 * 123
                 */
                drug_description: string;
                /**
                 * example:
                 * 123
                 */
                quantity: string;
                /**
                 * example:
                 * 123
                 */
                days_supply: string;
                /**
                 * example:
                 * 123
                 */
                refill_count: string;
                /**
                 * example:
                 * 123
                 */
                drug_form: string;
                /**
                 * example:
                 * 123
                 */
                strength: string;
                /**
                 * example:
                 * 123
                 */
                strength_qualifier: string;
                /**
                 * example:
                 * 123
                 */
                sig: string;
                /**
                 * example:
                 * 123
                 */
                cpid: string;
                /**
                 * example:
                 * 123
                 */
                unit_price: string;
            }[];
        }
        /**
         * Price info for a single drug formulation (strength, method of delivery, etc..)
         * Depending on the context, Source could be Fabric treatment_plan.prescriptions,
         * Perks XAPI drugs/{id}/prices, or Internal price list for Healthdyne.
         *
         * example:
         * {
         *   "ndc": "31722092601",
         *   "formulationId": "72162199205",
         *   "name": "Methylphenidate",
         *   "couponId": "005947",
         *   "price": {
         *     "amount": "10.50",
         *     "currency": "USD",
         *     "display": "$10.50"
         *   }
         * }
         */
        export interface DrugPricingInfo {
            ndc: string;
            formulationId: string;
            name: string;
            couponId?: string; // uuid
            price: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
        }
        /**
         * Backwards Compatibility Note:** If an unrecognized `drugType` is received by the client, `brand` should be assumed.
         *
         * example:
         * generic
         */
        export type DrugType = "brand" | "generic";
        /**
         * Drub & Variants info. Source Perks XAPI drugs/{id}/prices
         *
         * example:
         * {
         *   "ndc": "31722092601",
         *   "formulationId": "72162199205",
         *   "name": "Methylphenidate",
         *   "variants": [
         *     {
         *       "ndc": "71376020103",
         *       "formulationId": "72162199205",
         *       "name": "Jornay Pm"
         *     }
         *   ]
         * }
         */
        export interface DrugVariantInfo {
            ndc: string;
            formulationId: string;
            name: string;
            variants?: {
                ndc?: string;
                formulationId?: string;
                name?: string;
            }[];
        }
        /**
         * Bad Request
         * example:
         * {
         *   "status": 400,
         *   "message": "Bad Request"
         * }
         */
        export interface Error400BadRequest {
            status?: number;
            message?: string;
        }
        /**
         * The request is missing a valid token.
         * example:
         * {
         *   "status": 401,
         *   "message": "Unauthorized"
         * }
         */
        export interface Error401Unauthorized {
            status?: number;
            message?: string;
        }
        /**
         * Forbidden
         * example:
         * {
         *   "status": 403,
         *   "message": "403 Forbidden"
         * }
         */
        export interface Error403Forbidden {
            status?: number;
            message?: string;
        }
        /**
         * The requested resource was not found.
         * example:
         * {
         *   "status": 404,
         *   "message": "Resource not found"
         * }
         */
        export interface Error404NotFound {
            status?: number;
            message?: string;
        }
        /**
         * Unprocessable Entity
         * example:
         * {
         *   "status": 422,
         *   "errors": [
         *     {
         *       "message": "<field> can't be blank",
         *       "reason": "<field_id>"
         *     }
         *   ],
         *   "message": "Unprocessable Entity"
         * }
         */
        export interface Error422UnprocessableEntity {
            status?: number;
            errors?: {
                message?: string;
                reason?: string;
            }[];
            message?: string;
        }
        /**
         * example:
         * {
         *   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        export interface FabricToken {
            token?: string;
        }
        /**
         * example:
         * {
         *   "homeDelivery": {
         *     "drugNames": [
         *       "Minoxidil",
         *       "Finasteride"
         *     ],
         *     "priceRange": {
         *       "label": "Total cost",
         *       "minPrice": {
         *         "amount": "10.50",
         *         "currency": "USD",
         *         "display": "$10.50"
         *       },
         *       "maxPrice": {
         *         "amount": "20.50",
         *         "currency": "USD",
         *         "display": "$20.50"
         *       }
         *     }
         *   },
         *   "retail": {
         *     "drugNames": [
         *       "Minoxidil",
         *       "Finasteride"
         *     ],
         *     "priceRange": {
         *       "label": "Total cost",
         *       "minPrice": {
         *         "amount": "8.50",
         *         "currency": "USD",
         *         "display": "$8.50"
         *       },
         *       "maxPrice": {
         *         "amount": "19.50",
         *         "currency": "USD",
         *         "display": "$19.50"
         *       }
         *     }
         *   }
         * }
         */
        export interface FulfillmentOptions {
            homeDelivery?: {
                /**
                 * Source: Mapping Fabric/Perks NDC to DB(Healthdyne)
                 */
                drugNames?: string[];
                /**
                 * Source: Mapping Fabric/Perks NDC to DB(Healthdyne)
                 */
                priceRange?: /**
                 * example:
                 * {
                 *   "label": "Total Price",
                 *   "minPrice": {
                 *     "amount": "10.50",
                 *     "currency": "USD",
                 *     "display": "$10.50"
                 *   },
                 *   "maxPrice": {
                 *     "amount": "20.50",
                 *     "currency": "USD",
                 *     "display": "$20.50"
                 *   }
                 * }
                 */
                PriceRange;
            };
            retail?: {
                /**
                 * Source: Perks (filtered by what is available in Fabric Treatment Options)
                 */
                drugNames?: string[];
                /**
                 * Source: Perks: healthConditions.drugs.price
                 */
                priceRange?: /**
                 * example:
                 * {
                 *   "label": "Total Price",
                 *   "minPrice": {
                 *     "amount": "10.50",
                 *     "currency": "USD",
                 *     "display": "$10.50"
                 *   },
                 *   "maxPrice": {
                 *     "amount": "20.50",
                 *     "currency": "USD",
                 *     "display": "$20.50"
                 *   }
                 * }
                 */
                PriceRange;
            };
        }
        /**
         * This cookie need to be passed in subsequent calls to endpoints for the guest visit that was created.
         *
         * example:
         * {
         *   "gvid": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        export interface GVID {
            gvid: string;
        }
        /**
         * example:
         * {
         *   "stateName": "eligibility",
         *   "title": "Eligibility",
         *   "progressBar": {
         *     "accountSetup": {
         *       "index": 1,
         *       "name": "Account Setup"
         *     },
         *     "eligibility": {
         *       "index": 2,
         *       "name": "Eligibility"
         *     },
         *     "doctorReview": {
         *       "index": 4,
         *       "name": "Provider Review"
         *     },
         *     "interview": {
         *       "index": 3,
         *       "name": "Interview"
         *     },
         *     "payment": {
         *       "index": 5,
         *       "name": "Payment"
         *     },
         *     "personalInformation": {
         *       "index": 6,
         *       "name": "Personal Information"
         *     }
         *   },
         *   "contentLabels": {
         *     "formTitle": "Who is this visit for?",
         *     "forMyselfOption": "Myself",
         *     "forSomeoneOption": "Someone Else",
         *     "aboutYourselfText": "Tell us about yourself",
         *     "ageLabel": "Age",
         *     "locationLabel": "Current location",
         *     "aboutPatientText": "Tell us about the patient",
         *     "continueButton": "Continue",
         *     "dropdownStatePlaceholder": "State",
         *     "dropdownStateNotListed": "My state isn't listed",
         *     "myAgeLabel": "My Age",
         *     "backButton": "Back",
         *     "personalSex": "Sex Assigned at Birth",
         *     "sex": {
         *       "female": "Female",
         *       "male": "Male"
         *     },
         *     "states": [
         *       {
         *         "abbreviation": "MN",
         *         "name": "Minnesota"
         *       }
         *     ]
         *   }
         * }
         */
        export interface GuestVisitEligibility {
            stateName?: string;
            title?: string;
            progressBar?: /**
             * example:
             * {
             *   "personalInformation": {
             *     "index": 2,
             *     "name": "Visit Purpose"
             *   },
             *   "eligibility": {
             *     "index": 1,
             *     "name": "Eligibility"
             *   },
             *   "interview": {
             *     "index": 3,
             *     "name": "Health History"
             *   },
             *   "accountSetup": {
             *     "index": 4,
             *     "name": "Account Setup"
             *   },
             *   "payment": {
             *     "index": 5,
             *     "name": "Payment"
             *   },
             *   "doctorReview": {
             *     "index": 6,
             *     "name": "Provider Review"
             *   }
             * }
             */
            ProgressBar;
            contentLabels?: ContentLabels;
            actions?: /**
             * example:
             * {
             *   "continue": {
             *     "actionLabel": "Continue"
             *   },
             *   "goBack": {
             *     "actionLabel": "Back"
             *   }
             * }
             */
            Action;
            /**
             * #### Front end error descriptions
             *
             * - **errorCode**: Front end can use this to map to specific error.
             * - **errorDescription**: Description of the error defined by CMS / Product team.
             *
             */
            errorDescriptions?: {
                [name: string]: string;
            };
        }
        /**
         * example:
         * {
         *   "guestVisit": {
         *     "addressState": "MN",
         *     "patientBirthDate": "1987-04-03",
         *     "patientGender": "male",
         *     "preparerBirthDate": "null",
         *     "dependentVisit": false,
         *     "patientAge": 34
         *   },
         *   "conditionLabel": "cp_9q_449a_acne"
         * }
         */
        export interface GuestVisitInput {
            guestVisit: {
                addressState: string;
                patientBirthDate?: null | string; // date
                patientGender: string;
                preparerBirthDate?: null | string; // date
                dependentVisit?: boolean;
                patientAge: number;
                /**
                 * The age of the preparer. This is required when dependentVisit is true
                 */
                preparerAge?: number;
            };
            /**
             * This allows the visit's condition, also known as reason for visit, to be preset at the start of the visit. If this parameter is omitted, the reason_for_visit will be left unset, and the guest visit will later prompt for a reason for visit.
             *
             */
            conditionLabel?: string;
        }
        /**
         * example:
         * {
         *   "server": "healthy",
         *   "redis": "ready",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "ready",
         *   "db": "error"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "wait",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "reconnecting",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "connecting",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "connect",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "close",
         *   "db": "connected"
         * }
         * {
         *   "server": "unhealthy",
         *   "redis": "end",
         *   "db": "connected"
         * }
         */
        export interface HealthCheck {
            server: "healthy" | "unhealthy";
            redis: "wait" | "reconnecting" | "connecting" | "connect" | "ready" | "close" | "end";
            db: "connected" | "error";
        }
        /**
         * The prescription ordered for home delivery and its fulfillment status
         *
         * example:
         * {
         *   "id": "CLAIMCR",
         *   "createdDate": "2025-01-08",
         *   "shippedDate": "2025-01-10",
         *   "shippingAddress": {
         *     "line1": "123 Willow Way",
         *     "city": "Somewheresville",
         *     "state": "FL",
         *     "zipCode": "11111"
         *   },
         *   "prescription": {
         *     "drugName": "Tylenol",
         *     "strength": "500",
         *     "strengthQualifier": "mg",
         *     "quantityQualifier": "tablet",
         *     "status": "processing"
         *   }
         * }
         */
        export interface HomeDeliveryOrderStatus {
            /**
             * The unique order ID assigned to the order
             *
             */
            id: string; // unique
            /**
             * The date the order was created
             *
             */
            createdDate: string; // date
            /**
             * The date the order was shipped
             *
             */
            shippedDate?: string; // date
            /**
             * The delivery address for fulfilling the order
             *
             */
            shippingAddress: /**
             * example:
             * {
             *   "line1": "TEST MAIN",
             *   "line2": "Bldg 3",
             *   "line3": "Suite 102",
             *   "city": "MINNEAPOLIS",
             *   "state": "MN",
             *   "zipCode": "55401"
             * }
             */
            ShippingAddress;
            /**
             * The prescription drug included in the order along with its fulfillment status
             *
             */
            prescription: /**
             * The prescription ordered for home delivery
             *
             * example:
             * {
             *   "drugName": "Tylenol",
             *   "strength": "500",
             *   "strengthQualifier": "mg",
             *   "quantityQualifier": "tablet",
             *   "status": "processing"
             * }
             */
            HomeDeliveryPrescription;
        }
        /**
         * The prescription ordered for home delivery
         *
         * example:
         * {
         *   "drugName": "Tylenol",
         *   "strength": "500",
         *   "strengthQualifier": "mg",
         *   "quantityQualifier": "tablet",
         *   "status": "processing"
         * }
         */
        export interface HomeDeliveryPrescription {
            /**
             * The name of the drug in the prescription
             *
             */
            drugName: string;
            /**
             * The strength of the drug relative to the unit of measurement
             *
             */
            strength: string;
            /**
             * The strength unit of measurement for the drug
             *
             */
            strengthQualifier: string;
            /**
             * The quanity unit of measurement for the drug
             *
             */
            quantityQualifier: string;
            /**
             * The status of the prescription fulfillment
             *
             */
            status: "placed" | "processing" | "shipped";
        }
        /**
         * The unique identifier of the patient.
         *
         */
        export type Id = number;
        /**
         * example:
         * {
         *   "id": 17180,
         *   "fileName": "skin-rash-left-hand.jpg",
         *   "questionIdentifier": "q779"
         * }
         */
        export interface Image {
            id?: number;
            fileName?: string;
            questionIdentifier?: string;
        }
        /**
         * example:
         * {
         *   "questionZid": "q779",
         *   "file": "(binary)"
         * }
         */
        export interface ImageInput {
            questionZid?: string;
            file?: string; // binary
        }
        /**
         * example:
         * {
         *   "imageUrl": "https://example.com/image.png",
         *   "darkModeImageUrl": "https://example.com/dark-mode-image.png",
         *   "altText": "An example icon"
         * }
         */
        export interface ImageUrl {
            /**
             * example:
             * https://example.com/image.png
             */
            imageUrl?: string;
            /**
             * example:
             * https://example.com/dark-mode-image.png
             */
            darkModeImageUrl?: string;
            /**
             * example:
             * An example image
             */
            altText?: string;
        }
        /**
         * example:
         * {
         *   "stateName": "clinical_interview",
         *   "title": "Interview Question",
         *   "content": [
         *     {
         *       "contentType": "select_input",
         *       "contentName": "q775",
         *       "contentLabel": "<p>Almost done! Photos of the affected area of the skin are required to diagnose and treat you.</p><p><b>Can photos be taken and uploaded at this time?</b></p>",
         *       "options": [
         *         {
         *           "optionLabel": "Yes",
         *           "optionValue": "yes"
         *         },
         *         {
         *           "optionLabel": "No",
         *           "optionValue": "no"
         *         }
         *       ],
         *       "required": true
         *     }
         *   ],
         *   "progress": {
         *     "clinical_interview": {
         *       "percentage": 28.4
         *     }
         *   },
         *   "actions": {
         *     "continue": {
         *       "actionLabel": "Continue"
         *     },
         *     "goBack": {
         *       "actionLabel": "Back"
         *     }
         *   }
         * }
         */
        export interface Interaction {
            stateName?: string;
            title?: string;
            progressBar?: /**
             * example:
             * {
             *   "personalInformation": {
             *     "index": 2,
             *     "name": "Visit Purpose"
             *   },
             *   "eligibility": {
             *     "index": 1,
             *     "name": "Eligibility"
             *   },
             *   "interview": {
             *     "index": 3,
             *     "name": "Health History"
             *   },
             *   "accountSetup": {
             *     "index": 4,
             *     "name": "Account Setup"
             *   },
             *   "payment": {
             *     "index": 5,
             *     "name": "Payment"
             *   },
             *   "doctorReview": {
             *     "index": 6,
             *     "name": "Provider Review"
             *   }
             * }
             */
            ProgressBar;
            content?: {
                contentType?: string;
                contentName?: string;
                contentLabel?: string;
                lookupApiUrl?: string;
                maxCount?: number;
                maxLength?: number;
                minCount?: number;
                options?: {
                    optionLabel?: string;
                    optionValue?: string;
                    meta?: {
                        restrictions?: string[];
                        eligibilitySettings?: {
                            patientGender?: null | string;
                            patientMaxAge?: null | number;
                            patientMinAge?: null | number;
                            establishedPatientsOnly?: null | boolean;
                        };
                    };
                }[];
                postUrl?: string;
                required?: boolean;
            }[];
            /**
             * #### Front end error descriptions
             *
             * - **errorCode**: Front end can use this to map to specific error.
             * - **errorDescription**: Description of the error defined by CMS / Product team.
             *
             */
            errorDescriptions?: {
                [name: string]: string;
            };
            progress?: {
                [name: string]: {
                    percentage?: number;
                };
            };
            actions?: /**
             * example:
             * {
             *   "continue": {
             *     "actionLabel": "Continue"
             *   },
             *   "goBack": {
             *     "actionLabel": "Back"
             *   }
             * }
             */
            Action;
        }
        /**
         * example:
         * {
         *   "actionName": "continue",
         *   "responses": {
         *     "q857": "ihaveneverbeenprescribedtreatmentforthiscondition",
         *     "q858": "yes"
         *   }
         * }
         */
        export interface InteractionInput {
            actionName?: string;
            responses?: {
                [name: string]: string;
            };
        }
        /**
         * The invoice item contains the description, quantity, price, subtotal and discount applied to each item.
         *
         * example:
         * {
         *   "description": "Consultation",
         *   "quantity": 1,
         *   "price": {
         *     "currency": "USD",
         *     "amount": 100
         *   },
         *   "subtotal": {
         *     "currency": "USD",
         *     "amount": 100
         *   },
         *   "discount": [
         *     {
         *       "coupon": {
         *         "amountOff": 10,
         *         "created": "2021-09-01T00:00:00Z",
         *         "currency": "USD",
         *         "duration": "forever",
         *         "durationInMonths": null,
         *         "name": "10% off",
         *         "percentOff": null,
         *         "valid": true
         *       },
         *       "customer": "customer_id",
         *       "promotionCode": null,
         *       "startDate": 1630454400
         *     }
         *   ]
         * }
         */
        export interface InvoiceItem {
            description?: string;
            quantity?: number;
            price?: {
                currency?: string;
                amount?: number;
            };
            subtotal?: {
                currency?: string;
                amount?: number;
            };
            discount?: /**
             * The invoice item discounts contains the details of the discount applied to the invoice item.
             *
             * example:
             * {
             *   "coupon": {
             *     "amountOff": 10,
             *     "created": "2021-09-01T00:00:00Z",
             *     "currency": "USD",
             *     "duration": "forever",
             *     "durationInMonths": null,
             *     "name": "10% off",
             *     "percentOff": null,
             *     "valid": true
             *   },
             *   "customer": "customer_id",
             *   "promotionCode": null,
             *   "startDate": 1630454400
             * }
             */
            InvoiceItemDiscount[] | null;
        }
        /**
         * The invoice item discounts contains the details of the discount applied to the invoice item.
         *
         * example:
         * {
         *   "coupon": {
         *     "amountOff": 10,
         *     "created": "2021-09-01T00:00:00Z",
         *     "currency": "USD",
         *     "duration": "forever",
         *     "durationInMonths": null,
         *     "name": "10% off",
         *     "percentOff": null,
         *     "valid": true
         *   },
         *   "customer": "customer_id",
         *   "promotionCode": null,
         *   "startDate": 1630454400
         * }
         */
        export interface InvoiceItemDiscount {
            coupon?: {
                amountOff?: number | null;
                created?: string; // date-time
                currency?: string;
                duration?: string;
                durationInMonths?: number | null;
                name?: string;
                percentOff?: number | null;
                valid?: boolean;
            };
            customer?: string;
            promotionCode?: number | null;
            startDate?: number;
        }
        export type MailOrderRequests = /**
         * example:
         * {
         *   "mailOrderRequestKey": "FILL13SEP2024013624221",
         *   "orderNumber": "“7537084”,",
         *   "timestamp": "2024-09-13T15:00:44.051716Z",
         *   "status": "Shipped",
         *   "statusMessage": "The Rx has been shipped",
         *   "shipmentCarrier": "“UPS”",
         *   "shipmentDate": "“2024-09-06T06:00:02Z”",
         *   "trackingNumber": "12344567",
         *   "trackingUrl": "https://upstrackingurl?id=12345"
         * }
         */
        PatientMailOrderRequest;
        /**
         * example:
         * {
         *   "id": 5006,
         *   "medicationId": "6171233",
         *   "name": "Briviact oral",
         *   "state": "active",
         *   "externalMedicationId": null,
         *   "externalCode": null
         * }
         */
        export interface Medication {
            id?: number;
            medicationId?: string;
            medicationName?: string;
            state?: string;
            externalMedicationId?: string | null;
            externalCode?: string | null;
        }
        /**
         * example:
         * [
         *   {
         *     "id": 2009551,
         *     "name": "Cystex (methenamine-benz acid)"
         *   },
         *   {
         *     "id": 2253445,
         *     "name": "Cystex Plus (methenamine-sal)"
         *   }
         * ]
         */
        export type NameSearchResponse = {
            id?: number;
            name?: string;
        }[];
        /**
         * Get the user's current notifications
         *
         * example:
         * {
         *   "notifications": [
         *     {
         *       "id": 123,
         *       "title": "You have a provider response available",
         *       "message": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
         *       "messageType": null,
         *       "category": "treatment_plan",
         *       "force": true,
         *       "viewedAt": "2025-01-03T22:06:29Z",
         *       "createdAt": "2025-01-03T22:06:29Z",
         *       "updatedAt": "2025-01-03T22:06:29Z",
         *       "notificationLinks": [
         *         {
         *           "id": 123,
         *           "href": "/visits/195020/report",
         *           "label": "View Treatment Plan"
         *         }
         *       ]
         *     }
         *   ]
         * }
         */
        export interface Notification {
            notifications?: /**
             * Notification object
             *
             * example:
             * {
             *   "id": 123,
             *   "title": "You have a provider response available",
             *   "message": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
             *   "messageType": null,
             *   "category": "treatment_plan",
             *   "force": true,
             *   "viewedAt": "2025-01-03T22:06:29Z",
             *   "createdAt": "2025-01-03T22:06:29Z",
             *   "updatedAt": "2025-01-03T22:06:29Z",
             *   "notificationLinks": [
             *     {
             *       "id": 123,
             *       "href": "/visits/195020/report",
             *       "label": "View Treatment Plan"
             *     }
             *   ]
             * }
             */
            NotificationDetail[];
        }
        /**
         * Notification object
         *
         * example:
         * {
         *   "id": 123,
         *   "title": "You have a provider response available",
         *   "message": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
         *   "messageType": null,
         *   "category": "treatment_plan",
         *   "force": true,
         *   "viewedAt": "2025-01-03T22:06:29Z",
         *   "createdAt": "2025-01-03T22:06:29Z",
         *   "updatedAt": "2025-01-03T22:06:29Z",
         *   "notificationLinks": [
         *     {
         *       "id": 123,
         *       "href": "/visits/195020/report",
         *       "label": "View Treatment Plan"
         *     }
         *   ]
         * }
         */
        export interface NotificationDetail {
            id?: number;
            title?: string;
            message?: string;
            messageType?: null | string;
            category?: string;
            force?: boolean;
            viewedAt?: null | string; // date-time
            createdAt?: string; // date-time
            updatedAt?: string; // date-time
            notificationLinks?: /**
             * Contains a url (href) to the visit the notification belongs to.
             *
             * example:
             * {
             *   "id": 123,
             *   "href": "/visits/195020/report",
             *   "label": "View Treatment Plan"
             * }
             */
            NotificationLink[];
        }
        /**
         * Contains a url (href) to the visit the notification belongs to.
         *
         * example:
         * {
         *   "id": 123,
         *   "href": "/visits/195020/report",
         *   "label": "View Treatment Plan"
         * }
         */
        export interface NotificationLink {
            id?: number;
            href?: string;
            label?: string;
        }
        export type PatientAllergies = /**
         * example:
         * {
         *   "id": 3075,
         *   "state": "active",
         *   "allergyId": "2006808",
         *   "name": "Tylenol",
         *   "externalAllergyId": null,
         *   "externalCode": null
         * }
         */
        Allergy;
        /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "birthDate": "2010-01-01",
         *   "gender": "male"
         * }
         */
        export interface PatientCore {
            /**
             * The first name of the patient.
             *
             */
            firstName: string;
            /**
             * The last name of the patient.
             *
             */
            lastName: string;
            /**
             * The date of birth of the patient.
             *
             */
            birthDate: string; // date
            /**
             * The gender of the patient.
             *
             */
            gender: "male" | "female";
        }
        /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "birthDate": "2010-01-01",
         *   "gender": "male",
         *   "relationship": "Child"
         * }
         */
        export interface PatientCreatePayload {
            /**
             * The first name of the patient.
             *
             */
            firstName: string;
            /**
             * The last name of the patient.
             *
             */
            lastName: string;
            /**
             * The date of birth of the patient.
             *
             */
            birthDate: string; // date
            /**
             * The gender of the patient.
             *
             */
            gender: "male" | "female";
            /**
             * The dependent's relationship to the primary patient account.
             *
             */
            relationship: "Legal Dependent" | "Son" | "Daughter" | "Child" | "Spouse/Partner";
        }
        /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "email": "john.doe@example.com"
         * }
         */
        export interface PatientDetails {
            /**
             * Patient's first name
             *
             */
            firstName?: string;
            /**
             * Patient's last name
             *
             */
            lastName?: string;
            /**
             * Patient's email address
             *
             */
            email?: string;
        }
        /**
         * example:
         * {
         *   "patients": [
         *     {
         *       "id": 44,
         *       "email": "dev@rvohealth.com",
         *       "firstName": "Gugli",
         *       "lastName": "Macaroni",
         *       "birthDate": "1981-03-31",
         *       "insuranceCarrier": null,
         *       "insuranceGroup": null,
         *       "insuranceGroupId": null,
         *       "insuranceId": null,
         *       "mobilePhone": null,
         *       "smsNotify": false,
         *       "canChangePassword": true,
         *       "phone": "16125551234",
         *       "address": {
         *         "id": 45,
         *         "address1": "902 Hannah Crest",
         *         "address2": null,
         *         "city": "Minneapolis",
         *         "country": "USA",
         *         "phone": "",
         *         "state": "MN",
         *         "zip": "55401",
         *         "fullAddress": "902 Hannah Crest,  Minneapolis, MN 55401",
         *         "latitude": null,
         *         "longitude": null
         *       },
         *       "pendingVisits": 2
         *     }
         *   ]
         * }
         */
        export interface PatientList {
            patients: {
                id: number;
                email: string;
                firstName: string;
                lastName: string;
                birthDate: string;
                insuranceCarrier: string | null;
                insuranceGroup: string | null;
                insuranceGroupId: string | null;
                insuranceId: string | null;
                mobilePhone: string | null;
                smsNotify: boolean;
                canChangePassword: boolean;
                phone: string;
                address: {
                    id: number;
                    address1: string;
                    address2: string | null;
                    city: string;
                    country: string | null;
                    phone: string | null;
                    state: string;
                    zip: string;
                    fullAddress: string;
                    latitude: number | null;
                    longitude: number | null;
                };
                pendingVisits: number;
            }[];
        }
        /**
         * example:
         * {
         *   "mailOrderRequestKey": "FILL13SEP2024013624221",
         *   "orderNumber": "“7537084”,",
         *   "timestamp": "2024-09-13T15:00:44.051716Z",
         *   "status": "Shipped",
         *   "statusMessage": "The Rx has been shipped",
         *   "shipmentCarrier": "“UPS”",
         *   "shipmentDate": "“2024-09-06T06:00:02Z”",
         *   "trackingNumber": "12344567",
         *   "trackingUrl": "https://upstrackingurl?id=12345"
         * }
         */
        export interface PatientMailOrderRequest {
            /**
             * Identifier of mail order request from 3rd party prescription mail fulfillment service
             */
            mailOrderRequestKey?: string;
            /**
             * User friendly order number the fulfillment service associated with mail order request
             */
            orderNumber?: string | null;
            /**
             * Timestamp representing the latest time something changed with mail order request
             */
            timestamp?: string;
            /**
             * Status code of mail order request
             */
            status?: "Placed" | "Processing" | "Shipped";
            /**
             * User friendly message relaying status code
             */
            statusMessage?: string | null;
            /**
             * Code that reflects what shipping carrier is handling the mail order request
             */
            shipmentCarrier?: string | null;
            /**
             * Date mail order was shipped to customer
             */
            shipmentDate?: string | null;
            /**
             * Identifier of shipment from 3rd party mail carrier service
             */
            trackingNumber?: string | null;
            /**
             * A url that directs users to the 3rd party mail carrier site to check the latest tracking information
             */
            trackingUrl?: string | null;
        }
        export type PatientMedications = /**
         * example:
         * {
         *   "id": 5006,
         *   "medicationId": "6171233",
         *   "name": "Briviact oral",
         *   "state": "active",
         *   "externalMedicationId": null,
         *   "externalCode": null
         * }
         */
        Medication;
        /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "birthDate": "2010-01-01",
         *   "gender": "male",
         *   "id": 44366,
         *   "dependent": true,
         *   "relationship": "Child",
         *   "primaryPatientId": 99999
         * }
         */
        export interface PatientRecord {
            /**
             * The unique identifier of the patient.
             *
             */
            id: number;
            /**
             * Whether the patient is a dependent or not.
             *
             */
            dependent: boolean;
            /**
             * The relationship of the patient to the primary patient account, including the primary patient account itself.
             *
             */
            relationship: "Primary" | "Legal Dependent" | "Son" | "Daughter" | "Child" | "Spouse/Partner";
            primaryPatientId: /**
             * The unique identifier of the patient.
             *
             */
            Id;
            /**
             * The first name of the patient.
             *
             */
            firstName: string;
            /**
             * The last name of the patient.
             *
             */
            lastName: string;
            /**
             * The date of birth of the patient.
             *
             */
            birthDate: string; // date
            /**
             * The gender of the patient.
             *
             */
            gender: "male" | "female";
        }
        /**
         * Patient Visit History using to list Visit History
         *
         * example:
         * {
         *   "visits": [
         *     {
         *       "id": 123,
         *       "createdAt": "2024-05-20T19:08:56.000Z",
         *       "finishedAt": "2024-06-20T19:08:56.000Z",
         *       "reasonForVisit": "acne",
         *       "state": "prescriptions_expired",
         *       "headerText": "Action required",
         *       "readableState": "Complete your visit",
         *       "subState": "active",
         *       "pending": true,
         *       "prescriptions": [
         *         "triamcinolone acetonide (Oralone) 0.1 % dental paste",
         *         "valacyclovir (Valtrex) 1 gram oral tablet",
         *         "Mupirocin calcium 2 % topical cream"
         *       ]
         *     }
         *   ],
         *   "currentCount": 1,
         *   "currentPage": 1,
         *   "totalCount": 1,
         *   "totalPages": 1
         * }
         */
        export interface PatientVisitHistory {
            visits?: /**
             * Patient Visit Summary using to list Visit History
             *
             * example:
             * {
             *   "id": 123,
             *   "createdAt": "2024-05-20T19:08:56.000Z",
             *   "finishedAt": "2024-06-20T19:08:56.000Z",
             *   "reasonForVisit": "acne",
             *   "state": "prescriptions_expired",
             *   "headerText": "Action required",
             *   "readableState": "Complete your visit",
             *   "subState": "active",
             *   "pending": true,
             *   "prescriptions": [
             *     "triamcinolone acetonide (Oralone) 0.1 % dental paste",
             *     "valacyclovir (Valtrex) 1 gram oral tablet",
             *     "Mupirocin calcium 2 % topical cream"
             *   ]
             * }
             */
            PatientVisitSummary[];
            currentCount?: number;
            currentPage?: number;
            totalCount?: number;
            totalPages?: number;
        }
        /**
         * Patient Visit Summary using to list Visit History
         *
         * example:
         * {
         *   "id": 123,
         *   "createdAt": "2024-05-20T19:08:56.000Z",
         *   "finishedAt": "2024-06-20T19:08:56.000Z",
         *   "reasonForVisit": "acne",
         *   "state": "prescriptions_expired",
         *   "headerText": "Action required",
         *   "readableState": "Complete your visit",
         *   "subState": "active",
         *   "pending": true,
         *   "prescriptions": [
         *     "triamcinolone acetonide (Oralone) 0.1 % dental paste",
         *     "valacyclovir (Valtrex) 1 gram oral tablet",
         *     "Mupirocin calcium 2 % topical cream"
         *   ]
         * }
         */
        export interface PatientVisitSummary {
            id?: number;
            createdAt?: string; // date-time
            finishedAt?: string; // date-time
            reasonForVisit?: string;
            state?: string;
            headerText?: string;
            readableState?: string;
            subState?: string;
            pending?: boolean;
            prescriptions?: string[];
        }
        /**
         * See https://docs.stripe.com/api/promotion_codes/list
         *
         * example:
         * {
         *   "active": true,
         *   "code": "A1H1Q1MG",
         *   "couponId": "nVJYDOag",
         *   "amountOff": 0,
         *   "percentOff": 25.5
         * }
         */
        export interface PaymentDiscount {
            /**
             * Maps from PromotionsCode.active in Stripe
             *
             */
            active?: boolean;
            /**
             * Maps from PromotionsCode.code in Stripe
             *
             */
            code?: string;
            /**
             * Maps from PromotionsCode.coupon.id in Stripe
             *
             */
            couponId?: string;
            /**
             * Maps from PromotionsCode.coupon.amount_off in Stripe
             *
             */
            amountOff?: number;
            /**
             * Maps from PromotionsCode.coupon.percent_off in Stripe
             *
             */
            percentOff?: number;
        }
        /**
         * See https://docs.stripe.com/api/payment_intents/create
         *
         * example:
         * {
         *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH"
         * }
         * {
         *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
         *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje"
         * }
         * {
         *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
         *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje",
         *   "customerId": "cus_NffrFeUfNV2Hib"
         * }
         * {
         *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
         *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje",
         *   "customerId": "cus_NffrFeUfNV2Hib",
         *   "id": "pi_3MtwBwLkdIwHu7ix28a3tqPa"
         * }
         */
        export interface PaymentIntent {
            /**
             * Maps to PaymentIntent.id in Stripe.
             * Optional to allow retrieving payment methods.
             *
             */
            id?: string;
            /**
             * Maps to PaymentIntent.customer in Stripe.  (Also Customer.id)
             * Optional to allow saving and retrieving payment methods.
             *
             */
            customerId?: string;
            /**
             * Maps to PaymentIntent.client_secret in Stripe.
             *
             */
            piClientSecret: string;
            /**
             * Maps to CustomerSession.client_secret in Stripe.
             *
             */
            csClientSecret?: string;
        }
        /**
         * See https://docs.stripe.com/api/payment_intents/list
         *
         * example:
         * {
         *   "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPa",
         *   "amount": 2000,
         *   "amountReceived": 1500,
         *   "created": "2018-11-13T20:20:39+00:00",
         *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
         *   "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMv",
         *   "status": "succeeded",
         *   "lastPaymentError": null
         * }
         */
        export interface PaymentIntentDetail {
            /**
             * Maps to PaymentIntents.data[].id in Stripe.
             *
             */
            paymentIntentId?: string;
            /**
             * Maps to PaymentIntents.data[].amount in Stripe.
             *
             */
            amount?: number;
            /**
             * Maps to PaymentIntents.data[].amount_received in Stripe.
             *
             */
            amountReceived?: number;
            /**
             * Maps to PaymentIntents.data[].created in Stripe.
             *
             */
            created?: string; // date-time
            /**
             * Maps to PaymentIntent.client_secret in Stripe.
             *
             */
            piClientSecret?: string;
            /**
             * Maps to PaymentIntents.data[].invoice in Stripe.
             *
             */
            invoiceId?: string;
            /**
             * Maps to PaymentIntents.data[].status in Stripe.
             *
             */
            status?: string;
            /**
             * Maps to PaymentIntents.data[].last_payment_error in Stripe.
             *
             */
            lastPaymentError?: null | {
                [key: string]: any;
            };
        }
        /**
         * See https://docs.stripe.com/api/payment_intents/create
         *
         * example:
         * {
         *   "amount": 1099,
         *   "customerId": "cus_NffrFeUfNV2Hib",
         *   "currency": "usd"
         * }
         */
        export interface PaymentIntentInput {
            /**
             * Maps to PaymentIntent.amount in Stripe
             *
             */
            amount: number;
            /**
             * Maps to PaymentIntent.customer in Stripe.  (Also Customer.id)
             * Optional to allow saving and retrieving payment methods.
             *
             */
            customerId?: string;
            /**
             * Maps to PaymentIntent.currency in Stripe.
             * Defaults to 'usd'.
             *
             */
            currency?: "usd";
        }
        /**
         * See https://docs.stripe.com/api/payment_intents/list
         *
         * example:
         * {
         *   "transactions": [
         *     {
         *       "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPa",
         *       "amount": 2000,
         *       "amountReceived": 1500,
         *       "created": "2018-11-13T20:20:39+00:00",
         *       "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
         *       "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMv"
         *     },
         *     {
         *       "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPb",
         *       "amount": 75,
         *       "amountReceived": 0,
         *       "created": "2024-11-13T20:20:39+00:00",
         *       "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGI",
         *       "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMw"
         *     }
         *   ]
         * }
         */
        export interface PaymentIntents {
            transactions?: /**
             * See https://docs.stripe.com/api/payment_intents/list
             *
             * example:
             * {
             *   "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPa",
             *   "amount": 2000,
             *   "amountReceived": 1500,
             *   "created": "2018-11-13T20:20:39+00:00",
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *   "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMv",
             *   "status": "succeeded",
             *   "lastPaymentError": null
             * }
             */
            PaymentIntentDetail[];
        }
        /**
         * See https://docs.stripe.com/api/payment_methods/object
         *
         * example:
         * {
         *   "name": "visa 5555",
         *   "lastFour": "5555",
         *   "fingerprint": "Xt5EWLLDS7FJjR1c",
         *   "expireMonth": 8,
         *   "expireYear": 2025
         * }
         */
        export interface PaymentMethod {
            /**
             * User assigned name to help identify the card. Defaults to "type" + "lastFour"
             *
             */
            name: string;
            /**
             * Maps to PaymentMethod.last_four in Stripe.
             *
             */
            lastFour: string; // ^[0-9]{4}$
            /**
             * Maps to PaymentMethod.fingerprint in Stripe. Used as hash.
             *
             */
            fingerprint: string;
            /**
             * Maps to CustomerSession.exp_month in Stripe.
             *
             */
            expireMonth: number;
            /**
             * Maps to CustomerSession.exp_yea in Stripe.
             *
             */
            expireYear: number;
        }
        /**
         * See https://docs.stripe.com/api/payment_methods/object
         *
         * example:
         * [
         *   {
         *     "name": "visa 5555",
         *     "lastFour": "5555",
         *     "fingerprint": "Xt5EWLLDS7FJjR1c",
         *     "expireMonth": 8,
         *     "expireYear": 2025
         *   },
         *   {
         *     "name": "amex 3555",
         *     "lastFour": "3555",
         *     "fingerprint": "Ut5EWLLDS7FJjR1c",
         *     "expireMonth": 5,
         *     "expireYear": 2027
         *   }
         * ]
         */
        export type PaymentMethods = /**
         * See https://docs.stripe.com/api/payment_methods/object
         *
         * example:
         * {
         *   "name": "visa 5555",
         *   "lastFour": "5555",
         *   "fingerprint": "Xt5EWLLDS7FJjR1c",
         *   "expireMonth": 8,
         *   "expireYear": 2025
         * }
         */
        PaymentMethod[];
        /**
         * example:
         * {
         *   "isDelivery": true,
         *   "isPickup": true,
         *   "isPricingLowest": true,
         *   "perksId": "00605",
         *   "name": "Apci Choice (Hma 605)",
         *   "location": {
         *     "addressLine1": "TEST MAIN",
         *     "addressLine2": "Suite 102",
         *     "city": "MINNEAPOLIS",
         *     "country": "USA",
         *     "state": "MN",
         *     "zipCode": "55401",
         *     "phoneNumber": "256-555-5555"
         *   },
         *   "businessHours": [
         *     {
         *       "open": {
         *         "day": "Monday",
         *         "time": "8:00"
         *       },
         *       "close": {
         *         "day": "Monday",
         *         "time": "18:00"
         *       }
         *     }
         *   ],
         *   "availableDrugs": [
         *     {
         *       "ndc": "31722092601",
         *       "formulationId": "72162199205",
         *       "name": "Methylphenidate",
         *       "couponId": "005947",
         *       "price": {
         *         "amount": "10.50",
         *         "currency": "USD",
         *         "display": "$10.50"
         *       }
         *     }
         *   ],
         *   "totalPrice": {
         *     "amount": "10.50",
         *     "currency": "USD",
         *     "display": "$10.50"
         *   }
         * }
         */
        export interface Pharmacy {
            /**
             * Indicates that the pharmacy perform mail orders or not.
             *
             */
            isDelivery?: boolean;
            /**
             * Implicit from whether the pharmacy comes from Perks XAPI or Healthdyne.
             *
             */
            isPickup?: boolean;
            /**
             * True if and only if the pharmacy has the lowest price available.
             *
             */
            isPricingLowest?: boolean;
            /**
             * Source Perks XAPI prices.data[].retailer.id or internal id for Healthdyne.
             *
             */
            perksId?: string;
            /**
             * Source Perks XAPI prices.data[].retailer.name or internal DB of Healthdyne drug prices.
             *
             */
            name?: string;
            /**
             * Source Perks XAPI prices.data[].retailer.location healthdyne will not have a location.
             *
             */
            location?: /**
             * example:
             * {
             *   "addressLine1": "TEST MAIN",
             *   "addressLine2": "Suite 102",
             *   "city": "MINNEAPOLIS",
             *   "country": "USA",
             *   "state": "MN",
             *   "zipCode": "55401",
             *   "phoneNumber": "256-555-5555"
             * }
             */
            Address;
            businessHours?: /**
             * example:
             * {
             *   "open": {
             *     "day": "Monday",
             *     "time": "8:00"
             *   },
             *   "close": {
             *     "day": "Monday",
             *     "time": "18:00"
             *   }
             * }
             */
            BusinessHours[];
            /**
             * Source Perks XAPI prices.data[].retailer.drug{.variant} or internal id for Healthdyne.
             *
             */
            availableDrugs?: /**
             * Price info for a single drug formulation (strength, method of delivery, etc..)
             * Depending on the context, Source could be Fabric treatment_plan.prescriptions,
             * Perks XAPI drugs/{id}/prices, or Internal price list for Healthdyne.
             *
             * example:
             * {
             *   "ndc": "31722092601",
             *   "formulationId": "72162199205",
             *   "name": "Methylphenidate",
             *   "couponId": "005947",
             *   "price": {
             *     "amount": "10.50",
             *     "currency": "USD",
             *     "display": "$10.50"
             *   }
             * }
             */
            DrugPricingInfo[];
            /**
             * Source Summation of Perks XAPI prices.data[].retailer.price or internal DB of Healthdyne drug prices.
             *
             */
            totalPrice?: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
        }
        /**
         * Composite DTO for pharmacies endpoint.  Limited to 100 results.
         *
         * example:
         * {
         *   "searchParameters": {
         *     "deliveryType": "MailOrder",
         *     "ndc": "0169-4307-30",
         *     "patientId": "187",
         *     "pharmacyName": "CSV",
         *     "zipCode": "12345"
         *   },
         *   "prescribedDrugs": [
         *     {
         *       "ndc": "31722092601",
         *       "formulationId": "72162199205",
         *       "name": "Methylphenidate",
         *       "variants": [
         *         {
         *           "ndc": "71376020103",
         *           "formulationId": "72162199205",
         *           "name": "Jornay Pm"
         *         }
         *       ]
         *     }
         *   ],
         *   "pharmacies": [
         *     {
         *       "isPickup": true,
         *       "isPricingLowest": true,
         *       "isDelivery": true,
         *       "perksId": "00605",
         *       "name": "Apci Choice (Hma 605)",
         *       "location": {
         *         "addressLine1": "TEST MAIN",
         *         "addressLine2": "Suite 102",
         *         "city": "MINNEAPOLIS",
         *         "country": "USA",
         *         "state": "MN",
         *         "zipCode": "55401",
         *         "phoneNumber": "256-555-5555"
         *       },
         *       "businessHours": [
         *         {
         *           "open": {
         *             "day": "Monday",
         *             "time": "8:00"
         *           },
         *           "close": {
         *             "day": "Monday",
         *             "time": "18:00"
         *           }
         *         }
         *       ],
         *       "availableDrugs": [
         *         {
         *           "ndc": "31722092601",
         *           "formulationId": "72162199205",
         *           "name": "Methylphenidate",
         *           "couponId": "005947",
         *           "price": {
         *             "amount": "10.50",
         *             "currency": "USD",
         *             "display": "$10.50"
         *           }
         *         }
         *       ],
         *       "totalPrice": {
         *         "amount": "10.50",
         *         "currency": "USD",
         *         "display": "$10.50"
         *       }
         *     }
         *   ]
         * }
         */
        export interface PharmacyList {
            searchParameters?: /**
             * Source: the get http call query parameters that resulted in the pharmacy list response.
             *
             * example:
             * {
             *   "deliveryType": "MailOrder",
             *   "ndc": "0169430730",
             *   "patientId": "187",
             *   "pharmacyName": "CSV",
             *   "zipCode": "12345",
             *   "radiusMiles": 10
             * }
             */
            PharmacyListSearchParameters;
            /**
             * Source Fabric.visit.report.prescriptions, includes info from Perks API /prices
             * This is a list of drugs and variants to allow the user to make a selection
             *
             */
            prescribedDrugs?: /**
             * Drub & Variants info. Source Perks XAPI drugs/{id}/prices
             *
             * example:
             * {
             *   "ndc": "31722092601",
             *   "formulationId": "72162199205",
             *   "name": "Methylphenidate",
             *   "variants": [
             *     {
             *       "ndc": "71376020103",
             *       "formulationId": "72162199205",
             *       "name": "Jornay Pm"
             *     }
             *   ]
             * }
             */
            DrugVariantInfo[];
            pharmacies?: /**
             * example:
             * {
             *   "isDelivery": true,
             *   "isPickup": true,
             *   "isPricingLowest": true,
             *   "perksId": "00605",
             *   "name": "Apci Choice (Hma 605)",
             *   "location": {
             *     "addressLine1": "TEST MAIN",
             *     "addressLine2": "Suite 102",
             *     "city": "MINNEAPOLIS",
             *     "country": "USA",
             *     "state": "MN",
             *     "zipCode": "55401",
             *     "phoneNumber": "256-555-5555"
             *   },
             *   "businessHours": [
             *     {
             *       "open": {
             *         "day": "Monday",
             *         "time": "8:00"
             *       },
             *       "close": {
             *         "day": "Monday",
             *         "time": "18:00"
             *       }
             *     }
             *   ],
             *   "availableDrugs": [
             *     {
             *       "ndc": "31722092601",
             *       "formulationId": "72162199205",
             *       "name": "Methylphenidate",
             *       "couponId": "005947",
             *       "price": {
             *         "amount": "10.50",
             *         "currency": "USD",
             *         "display": "$10.50"
             *       }
             *     }
             *   ],
             *   "totalPrice": {
             *     "amount": "10.50",
             *     "currency": "USD",
             *     "display": "$10.50"
             *   }
             * }
             */
            Pharmacy[];
        }
        /**
         * Source: the get http call query parameters that resulted in the pharmacy list response.
         *
         * example:
         * {
         *   "deliveryType": "MailOrder",
         *   "ndc": "0169430730",
         *   "patientId": "187",
         *   "pharmacyName": "CSV",
         *   "zipCode": "12345",
         *   "radiusMiles": 10
         * }
         */
        export interface PharmacyListSearchParameters {
            /**
             * Type of delivery service (e.g., retail or mail order). Defaults to mail order. (Optional)
             *
             */
            deliveryType?: "Retail" | "MailOrder";
            ndc?: string;
            /**
             * Source Fabric patient.id
             *
             */
            patientId?: string;
            /**
             * Source query parameter (optional)
             *
             */
            pharmacyName?: string;
            /**
             * Source Fabric patient.address OR query parameter
             *
             */
            zipCode?: string;
            /**
             * Source query parameter (optional)
             *
             */
            radiusMiles?: number;
        }
        /**
         * example:
         * {
         *   "pharmacyControlNumber": "CLAIMCR",
         *   "couponId": "005947",
         *   "cardholderId": "APD1066745",
         *   "groupId": "1858CCC"
         * }
         */
        export interface PharmacySelection {
            /**
             * Maps to Fabric discount_card_pcn, only for retail
             *
             */
            pharmacyControlNumber?: string;
            /**
             * Maps to Fabric discount_card_bin, only for retail
             *
             */
            couponId?: string;
            /**
             * Maps to Fabric discount_card_cardholder_id, only for retail
             *
             */
            cardholderId?: string;
            /**
             * Maps to Fabric discount_card_group_id, only for retail
             *
             */
            groupId?: string;
        }
        /**
         * example:
         * {
         *   "drugName": "Amoxicillin",
         *   "ndcCode": "50090-0301",
         *   "quantity": 30,
         *   "strength": "500mg",
         *   "refills": 3,
         *   "drugForm": "Tablet",
         *   "daysSupply": 10,
         *   "description": "Take one tablet by mouth every 8 hours for 10 days."
         * }
         */
        export interface Prescription {
            drugName?: string;
            ndcCode?: string;
            quantity?: number;
            strength?: string;
            refills?: number;
            drugForm?: string;
            daysSupply?: number;
            description?: string;
        }
        /**
         * example:
         * {
         *   "amount": "10.50",
         *   "currency": "USD",
         *   "display": "$10.50"
         * }
         */
        export interface Price {
            /**
             * The decimal value of the price encoded as a string. String representation prevents encoding errors since JSON doesn't allow numeric precision to be specified. Clients should parse this value as a string and convert to decimal.
             * example:
             * 10.50
             */
            amount?: string;
            /**
             * The ISO 4217 currency code for this price.
             * example:
             * USD
             */
            currency?: string;
            /**
             * example:
             * $10.50
             */
            display?: string;
        }
        /**
         * example:
         * {
         *   "label": "Total Price",
         *   "minPrice": {
         *     "amount": "10.50",
         *     "currency": "USD",
         *     "display": "$10.50"
         *   },
         *   "maxPrice": {
         *     "amount": "20.50",
         *     "currency": "USD",
         *     "display": "$20.50"
         *   }
         * }
         */
        export interface PriceRange {
            label?: string;
            minPrice?: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
            maxPrice?: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
        }
        /**
         * example:
         * {
         *   "personalInformation": {
         *     "index": 2,
         *     "name": "Visit Purpose"
         *   },
         *   "eligibility": {
         *     "index": 1,
         *     "name": "Eligibility"
         *   },
         *   "interview": {
         *     "index": 3,
         *     "name": "Health History"
         *   },
         *   "accountSetup": {
         *     "index": 4,
         *     "name": "Account Setup"
         *   },
         *   "payment": {
         *     "index": 5,
         *     "name": "Payment"
         *   },
         *   "doctorReview": {
         *     "index": 6,
         *     "name": "Provider Review"
         *   }
         * }
         */
        export interface ProgressBar {
            personalInformation?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
            eligibility?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
            interview?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
            accountSetup?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
            payment?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
            doctorReview?: /**
             * example:
             * {
             *   "index": 1,
             *   "name": "Eligibility"
             * }
             */
            ProgressBarItem;
        }
        /**
         * example:
         * {
         *   "index": 1,
         *   "name": "Eligibility"
         * }
         */
        export interface ProgressBarItem {
            index: number;
            name: string;
        }
        /**
         * The report receipt is the result of a completed consult.
         * It includes the business information, the stripe payment invoice information.
         * It includes the items purchased, the total amount, subtotal amount, taxes and the payment method.
         *
         * example:
         * {
         *   "business": {
         *     "name": "Business Name",
         *     "logo": "https://business.com/logo.png",
         *     "phone": "+1234567890",
         *     "email": "test@email.net",
         *     "website": "https://business.com"
         *   },
         *   "invoice": "invoice_id",
         *   "datePurchased": "2021-09-01T00:00:00Z",
         *   "paymentMethod": {
         *     "type": "card",
         *     "card": {
         *       "brand": "Visa",
         *       "last4": "4242"
         *     }
         *   },
         *   "items": [
         *     {
         *       "description": "Consultation",
         *       "quantity": 1,
         *       "price": {
         *         "currency": "USD",
         *         "amount": 100
         *       },
         *       "subtotal": {
         *         "currency": "USD",
         *         "amount": 100
         *       },
         *       "discount": [
         *         {
         *           "coupon": {
         *             "amountOff": 10,
         *             "created": "2021-09-01T00:00:00Z",
         *             "currency": "USD",
         *             "duration": "forever",
         *             "durationInMonths": null,
         *             "name": "10% off",
         *             "percentOff": null,
         *             "valid": true
         *           },
         *           "customer": "customer_id",
         *           "promotionCode": null,
         *           "startDate": 1630454400
         *         }
         *       ]
         *     }
         *   ],
         *   "subtotal": {
         *     "currency": "USD",
         *     "amount": 100
         *   },
         *   "taxes": {
         *     "currency": "USD",
         *     "amount": 10
         *   },
         *   "totalAmount": {
         *     "currency": "USD",
         *     "amount": 110
         *   }
         * }
         */
        export interface ReportReceipt {
            business?: {
                name?: string;
                logo?: string;
                phone?: string;
                email?: string;
                website?: string;
            };
            invoice?: string;
            datePurchased?: string; // date-time
            paymentMethod?: {
                type?: string;
                card?: {
                    brand?: string;
                    last4?: string;
                } | null;
            };
            items?: /**
             * The invoice item contains the description, quantity, price, subtotal and discount applied to each item.
             *
             * example:
             * {
             *   "description": "Consultation",
             *   "quantity": 1,
             *   "price": {
             *     "currency": "USD",
             *     "amount": 100
             *   },
             *   "subtotal": {
             *     "currency": "USD",
             *     "amount": 100
             *   },
             *   "discount": [
             *     {
             *       "coupon": {
             *         "amountOff": 10,
             *         "created": "2021-09-01T00:00:00Z",
             *         "currency": "USD",
             *         "duration": "forever",
             *         "durationInMonths": null,
             *         "name": "10% off",
             *         "percentOff": null,
             *         "valid": true
             *       },
             *       "customer": "customer_id",
             *       "promotionCode": null,
             *       "startDate": 1630454400
             *     }
             *   ]
             * }
             */
            InvoiceItem[];
            subtotal?: {
                currency?: string;
                amount?: number;
            };
            taxes?: {
                currency?: string;
                amount?: number;
            };
            totalAmount?: {
                currency?: string;
                amount?: number;
            };
        }
        /**
         * example:
         * {
         *   "clinicSerial": [
         *     "123456789",
         *     "588834993"
         *   ],
         *   "cosmosId": "123457890",
         *   "fabricId": 123457890,
         *   "fabricGVID": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
         *   "fabricJwtExpires": "2024-12-31",
         *   "fabricMfaToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
         *   "fabricLoggedIn": "true",
         *   "sessionId": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
         *   "sessionInvalidates": 1,
         *   "tokenExpires": "2024-12-31"
         * }
         */
        export interface SessionData {
            clinicSerial?: string[];
            cosmosId?: string;
            fabricId?: number;
            fabricGVID?: string;
            fabricJwtExpires?: string;
            fabricJwtToken?: string;
            fabricMfaToken?: string;
            fabricLoggedIn?: string;
            sessionId?: string;
            sessionInvalidates?: number;
            tokenExpires?: string;
        }
        /**
         * example:
         * {
         *   "line1": "TEST MAIN",
         *   "line2": "Bldg 3",
         *   "line3": "Suite 102",
         *   "city": "MINNEAPOLIS",
         *   "state": "MN",
         *   "zipCode": "55401"
         * }
         */
        export interface ShippingAddress {
            line1: string;
            line2?: string;
            line3?: string;
            city: string;
            state: string;
            zipCode: string;
        }
        /**
         * The token is used to authenticate the user for the duration of the tokenExpires time.
         * The token is used in the header for all requests that require authentication.
         *
         * example:
         * {
         *   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
         *   "tokenExpires": "2024-05-26T10:15:00",
         *   "userId": 987654,
         *   "passwordExpired": false,
         *   "roles": [
         *     "user"
         *   ],
         *   "clinicSerial": "CLN123456789",
         *   "completedProfile": true,
         *   "phoneVerificationRequired": false
         * }
         */
        export interface Token {
            token: string;
            tokenExpires: string; // date-time
            userId: number;
            passwordExpired: boolean;
            roles: string[];
            clinicSerial: string;
            completedProfile?: boolean;
            phoneVerificationRequired?: boolean;
        }
        /**
         * example:
         * {
         *   "confirmationToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        export interface TokenVerify {
            confirmationToken?: string;
        }
        /**
         * example:
         * [
         *   {
         *     "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
         *     "commonName": "Minoxidil",
         *     "urlSlug": "minoxidil",
         *     "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
         *     "price": {
         *       "amount": "8.50",
         *       "currency": "USD",
         *       "display": "$8.50"
         *     },
         *     "quantity": 30,
         *     "drugType": "BRAND",
         *     "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
         *   }
         * ]
         */
        export type TreatmentOptions = {
            /**
             * Source Perks drug.id
             * example:
             * e82bfafb-eca1-4711-9156-b0f9fc8b54a7
             */
            perksId?: string; // uuid
            /**
             * Source Perks drug.commonName
             * example:
             * Minoxidil
             */
            commonName?: string;
            /**
             * Source Perks drug.urlSlug
             * example:
             * minoxidil
             */
            urlSlug?: string;
            /**
             * Source Perks drug.formulationId
             */
            formulationId?: string; // uuid
            /**
             * Source Perks drug.price or HealthDyne drug price (from DB) whichever is lower
             */
            price?: /**
             * example:
             * {
             *   "amount": "10.50",
             *   "currency": "USD",
             *   "display": "$10.50"
             * }
             */
            Price;
            /**
             * Source Perks drug.quantity or HealthDyne whichever price we use
             */
            quantity?: number; // double
            /**
             * Source Perks drug.drugType
             */
            drugType?: "BRAND" | "GENERIC";
            /**
             * Source Perks drug.descriptionText
             */
            description?: string;
        }[];
        /**
         * The treatment plan is the result of a completed consult.
         * It includes the patient information, the doctor who completed the consult,
         * the prescriptions, and the triage options.
         *
         * example:
         * {
         *   "fabricId": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
         *   "assessmentText": "You have a sinus infection.",
         *   "patientId": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
         *   "patientFirstName": "Hans",
         *   "patientLastName": "Moleman",
         *   "patientZip": "90210",
         *   "state": "CA",
         *   "patientBirthDate": "1980-01-01",
         *   "patientPhone": "555-555-5555",
         *   "chiefComplaint": "I have a sore throat.",
         *   "reasonForVisit": "Cold, sinus infection, or flu",
         *   "prescriptions": [
         *     {
         *       "drugName": "Amoxicillin",
         *       "ndcCode": "50090-0301",
         *       "quantity": 30,
         *       "strength": "500mg",
         *       "refills": 3,
         *       "drugForm": "Tablet",
         *       "daysSupply": 10,
         *       "description": "Take one tablet by mouth every 8 hours for 10 days."
         *     }
         *   ],
         *   "createdAt": "2024-05-26T09:46:00Z",
         *   "finishedAt": "2024-05-26T10:02:00Z",
         *   "headerText": "Your treatment plan",
         *   "icdCode": "J01.90",
         *   "labelText": "Recommended medications",
         *   "requiredTriageOption": "ScheduleDoctorVisit",
         *   "tags": [
         *     "sinus infection"
         *   ],
         *   "triageRequired": true,
         *   "patientMrn": "123456",
         *   "doctor": {
         *     "fabricId": "123e4567-e89b-12d3-a456-426614174000",
         *     "firstName": "Nick",
         *     "lastName": "Riviera",
         *     "title": "MD"
         *   }
         * }
         */
        export interface TreatmentPlan {
            fabricId?: string; // uuid
            assessmentText?: string | null;
            patientId?: string; // uuid
            patientFirstName?: string;
            patientLastName?: string;
            patientZip?: string;
            state?: string;
            patientBirthDate?: string | null;
            patientPhone?: string | null;
            chiefComplaint?: string | null;
            reasonForVisit?: string | null;
            prescriptions?: /**
             * example:
             * {
             *   "drugName": "Amoxicillin",
             *   "ndcCode": "50090-0301",
             *   "quantity": 30,
             *   "strength": "500mg",
             *   "refills": 3,
             *   "drugForm": "Tablet",
             *   "daysSupply": 10,
             *   "description": "Take one tablet by mouth every 8 hours for 10 days."
             * }
             */
            Prescription[];
            createdAt?: string; // date-time
            finishedAt?: string | null; // date-time
            headerText?: string | null;
            icdCode?: string | null;
            labelText?: string | null;
            requiredTriageOption?: string;
            tags?: string[] | null;
            triageRequired?: boolean;
            patientMrn?: string | null;
            doctor?: {
                fabricId?: string; // uuid
                firstName?: string;
                lastName?: string;
                title?: string;
            } | null;
            content?: /**
             * Static content indicating that a treament plan has successfully been created.
             *
             * example:
             * {
             *   "treatmentPlanCreatedFirstPerson": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
             *   "treatmentPlanCreatedThirdPerson": "Thank you for using Optum Perks Online Care! A provider has reviewed Hans's symptoms and created a treatment plan.",
             *   "treatmentPlanAvailable": "Your Treatment Plan is Available."
             * }
             */
            TreatmentPlanSuccessContent;
        }
        /**
         * Comment on treatment plan
         *
         * example:
         * {
         *   "id": 5809,
         *   "comment": "Should I stop taking this if my symptoms improve?<br>Patient's phone number is: 1 (320) 310-9771",
         *   "commentableId": 109318,
         *   "commentableType": "Visit",
         *   "createdAt": "2024-09-16T17:40:28Z",
         *   "endsConversation": false,
         *   "needsReview": true,
         *   "reviewedByClinicianAt": null,
         *   "targetAudience": [
         *     "doctor"
         *   ],
         *   "title": "",
         *   "updatedAt": "2024-09-16T17:40:28Z",
         *   "userId": 1769
         * }
         */
        export interface TreatmentPlanComment {
            id?: number;
            comment?: string;
            commentableId?: number;
            commentableType?: string;
            createdAt?: string; // date-time
            endsConversation?: boolean;
            needsReview?: boolean;
            reviewedByClinicianAt?: null | string; // date-time
            targetAudience?: string[];
            title?: string;
            updatedAt?: string; // date-time
            userId?: number;
        }
        /**
         * This returns the treatment plan detailed report that is generated after a completed consult.
         * It includes the doctor summray, prescribed medications information, school/work notes, self care, visit follow up, and payment information.
         *
         * example:
         * {
         *   "report": {
         *     "allowPatientComments": false,
         *     "clinicianFooter": "Clinician Footer",
         *     "createdAt": "2024-08-29T21:06:03Z",
         *     "commentableExpirationDate": "2024-08-30",
         *     "completeBy": "2021-09-29T00:00:00Z",
         *     "doctorSummary": "<p><b>Dear Harsh,</b></p><p>Based on the information provided, you have <b>viral sinusitis</b>, also known as a sinus infection. Sinus infections are caused by bacteria or a virus and symptoms are almost always identical. The difference between the 2 types of infections is timing.</p><p>Sinus infections start as viral infections and symptoms improve on their own in about 7 days. A bacterial infection may have developed if any of the following apply to you:</p><ul>\n<li>You have had 7 days of symptoms and are experiencing at least 2 of the following:</li>\n<ul>\n<li>Fever</li>\n<li>Facial pressure or headache</li>\n<li>Green or yellow nasal mucus</li>\n<li>Symptoms that improved and then got worse again</li>\n</ul>\n<li>You have had symptoms for 10 or more days</li>\n</ul><h3>Medication information</h3><p>Because you have a viral infection, antibiotics will not help you get better. Treating a viral infection with antibiotics could actually make you feel worse.</p><p>I am prescribing:</p><ul><li>\n<b>Ibuprofen 800 mg oral tablet.</b> Take 1 tablet by mouth 3 times per day as needed for 7 days. Do not exceed 2400mg in 24 hours. There are no refills with this prescription.</li></ul><h3>Self care</h3><p>Steps you can take to be as comfortable as possible:</p><ul>\n<li>Rest.</li>\n<li>Drink plenty of fluids.</li>\n<li>Take a warm shower to loosen congestion</li>\n<li>Use a cool-mist humidifier.</li>\n<li>Use throat lozenges.</li>\n<li>Suck on frozen items such as popsicles.</li>\n<li>Drink hot tea with lemon and honey.</li>\n<li>Gargle with warm salt water (1/4 teaspoon of salt per 8 ounce glass of water).</li>\n</ul><h3>When to seek care</h3><p>Please be seen in a clinic or urgent care if any of the following occur:</p><ul><li>New symptoms develop, or symptoms become worse</li></ul><p><b>Call 911 or go to the emergency room if any of the following occur:</b></p><ul>\n<li>Difficulty breathing</li>\n<li>If you feel that your throat is closing off</li>\n<li>Suddenly develop a rash</li>\n<li>Unable to swallow fluids or are drooling</li>\n</ul><p>For the latest updates on COVID-19 (Coronavirus), please visit the <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/index.html\" target=\"_blank\" rel=\"nofollow\">Centers for Disease Control and Prevention (CDC)</a>. Also, your state and local health department websites may provide additional guidance regarding testing and isolation recommendations for your location.</p>",
         *     "doctorSummaryBasicText": "Dear Harsh,\n\nBased on the information provided, you have viral sinusitis, also\nknown as a sinus infection. Sinus infections are caused by\nbacteria or a virus and symptoms are almost always identical. The\ndifference between the 2 types of infections is timing.\n\nSinus infections start as viral infections and symptoms improve\non their own in about 7 days. A bacterial infection may have\ndeveloped if any of the following apply to you:\n\n* You have had 7 days of symptoms and are experiencing at least 2\nof the following:\n* Fever\n* Facial pressure or headache\n* Green or yellow nasal mucus\n* Symptoms that improved and then got worse again\n* You have had symptoms for 10 or more days\n\nMedication information\n----------------------\n\nBecause you have a viral infection, antibiotics will not help you\nget better. Treating a viral infection with antibiotics could\nactually make you feel worse.\n\nI am prescribing:\n\n* Ibuprofen 800 mg oral tablet. Take 1 tablet by mouth 3 times\nper day as needed for 7 days. Do not exceed 2400mg in 24 hours.\nThere are no refills with this prescription.\n\nSelf care\n---------\n\nSteps you can take to be as comfortable as possible:\n\n* Rest.\n* Drink plenty of fluids.\n* Take a warm shower to loosen congestion\n* Use a cool-mist humidifier.\n* Use throat lozenges.\n* Suck on frozen items such as popsicles.\n* Drink hot tea with lemon and honey.\n* Gargle with warm salt water (1/4 teaspoon of salt per 8 ounce\nglass of water).\n\nWhen to seek care\n-----------------\n\nPlease be seen in a clinic or urgent care if any of the following\noccur:\n\n* New symptoms develop, or symptoms become worse\nCall 911 or go to the emergency room if any of the following\noccur:\n\n* Difficulty breathing\n* If you feel that your throat is closing off\n* Suddenly develop a rash\n* Unable to swallow fluids or are drooling\nFor the latest updates on COVID-19 (Coronavirus), please visit\nthe Centers for Disease Control and Prevention (CDC) \n( https://www.cdc.gov/coronavirus/2019-ncov/index.html ). Also,\nyour state and local health department websites may provide\nadditional guidance regarding testing and isolation\nrecommendations for your location.",
         *     "hideSendMessages": false,
         *     "id": 37362,
         *     "orderTransactions": [
         *       {
         *         "amount": 2500,
         *         "basePrice": 2500,
         *         "createdAt": "2024-08-29T17:41:30Z",
         *         "description": "ZIP(visit) #190507 to Optum Perks MN",
         *         "freeVisitReason": null,
         *         "insuranceBilledAmount": null,
         *         "insuranceBilledAt": null,
         *         "insurancePaidAmount": null,
         *         "insurancePaidAt": null,
         *         "promoCode": null,
         *         "promoCodeAmount": null,
         *         "refundAmount": null,
         *         "transactionType": "Visit",
         *         "zipGroupDiscountAmount": null,
         *         "stripePaymentAmount": 2500
         *       }
         *     ],
         *     "prescriptions": [
         *       {
         *         "drugName": "Amoxicillin",
         *         "ndcCode": "50090-0301",
         *         "quantity": 30,
         *         "strength": "500mg",
         *         "refills": 3,
         *         "drugForm": "Tablet",
         *         "daysSupply": 10,
         *         "description": "Take one tablet by mouth every 8 hours for 10 days."
         *       }
         *     ],
         *     "prescriptionChangePeriodActive": false,
         *     "schoolWorkNote": {
         *       "evaluationDateCopy": "Harsh Patel has been evaluated and received care on 8/29/2024.",
         *       "firstDateOfAbsence": "2024-08-29T00:00:00Z",
         *       "hideSendMessages": false,
         *       "id": 2452,
         *       "notes": null,
         *       "returnMessageCopy": "Harsh can return to school/work without restrictions on 9/3/2024.",
         *       "updatedAt": "2024-08-29T21:06:03Z"
         *     },
         *     "updatePrescriptionAccordionVisible": false,
         *     "updateTreatmentPlanVisible": false
         *   },
         *   "content": {
         *     "medicalEmergencyAttentionText": "<span class=\"attention-color\">If you are experiencing a medical emergency, please call</span>\n<a class=\"attention-color\" href=\"tel:911\" style=\"text-decoration: none; cursor: default;\" rel=\"nofollow\">911</a>\n",
         *     "callSupportInstruction": "If your question is not specific to your visit treatment plan, please contact Customer Support: <a class=\"footer-support-phone\" style=\"text-decoration: none; cursor: default;\" rel=\"nofollow\">(866) 714-3330</a>",
         *     "oneMoreQuestionText": "Please enter your question and a phone number you can be reached at if the provider needs to contact you.",
         *     "oneMoreQuestionButtonText": "Send message"
         *   }
         * }
         */
        export interface TreatmentPlanReport {
            report?: {
                allowPatientComments?: boolean;
                clinicianFooter?: string;
                createdAt?: string; // date
                commentableExpirationDate?: string; // date-time
                completeBy?: string; // date-time
                doctorSummary?: string;
                doctorSummaryBasicText?: string;
                hideSendMessages?: boolean;
                id?: number;
                orderTransactions?: {
                    amount?: number;
                    basePrice?: number;
                    createdAt?: string; // date-time
                    description?: string;
                    freeVisitReason?: null | string;
                    insuranceBilledAmount?: null | number;
                    insuranceBilledAt?: null | string; // date-time
                    insurancePaidAmount?: null | number;
                    insurancePaidAt?: null | string; // date-time
                    promoCode?: null | string;
                    promoCodeAmount?: null | number;
                    refundAmount?: null | number;
                    transactionType?: string;
                    zipGroupDiscountAmount?: null | number;
                    stripePaymentAmount?: null | number;
                }[];
                prescriptions?: /**
                 * example:
                 * {
                 *   "drugName": "Amoxicillin",
                 *   "ndcCode": "50090-0301",
                 *   "quantity": 30,
                 *   "strength": "500mg",
                 *   "refills": 3,
                 *   "drugForm": "Tablet",
                 *   "daysSupply": 10,
                 *   "description": "Take one tablet by mouth every 8 hours for 10 days."
                 * }
                 */
                Prescription[];
                prescriptionChangePeriodActive?: boolean;
                schoolWorkNote?: {
                    evaluationDateCopy?: string;
                    firstDateOfAbsence?: string; // date-time
                    hideSendMessages?: boolean;
                    id?: number;
                    notes?: null | string;
                    returnMessageCopy?: string;
                    updatedAt?: string; // date-time
                };
                updatePrescriptionAccordionVisible?: boolean;
                updateTreatmentPlanVisible?: boolean;
            };
            content?: {
                medicalEmergencyAttentionText?: string;
                callSupportInstruction?: string;
                oneMoreQuestionText?: string;
                oneMoreQuestionButtonText?: string;
            };
        }
        /**
         * Static content indicating that a treament plan has successfully been created.
         *
         * example:
         * {
         *   "treatmentPlanCreatedFirstPerson": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
         *   "treatmentPlanCreatedThirdPerson": "Thank you for using Optum Perks Online Care! A provider has reviewed Hans's symptoms and created a treatment plan.",
         *   "treatmentPlanAvailable": "Your Treatment Plan is Available."
         * }
         */
        export interface TreatmentPlanSuccessContent {
            treatmentPlanCreatedFirstPerson?: string;
            treatmentPlanCreatedThirdPerson?: string;
            treatmentPlanAvailable?: string;
        }
        /**
         * example:
         * {
         *   "id": "123e4567-e89b-12d3-a456-426614174000"
         * }
         */
        export interface Visit {
            id?: string; // uuid
        }
        /**
         * example:
         * {
         *   "conditionLabel": "cp_9q_449a_acne",
         *   "locationState": "MN"
         * }
         */
        export interface VisitInput {
            /**
             * This allows the visit's condition, also known as reason for visit, to be preset at the start of the visit. If this parameter is omitted, the reason_for_visit will be left unset, and the visit will later prompt for a reason for visit.
             *
             */
            conditionLabel?: string;
            /**
             * Condition label is optional. If provided, location state is also required.
             */
            locationState?: string;
        }
    }
}
declare namespace Paths {
    namespace DeleteGuestVisitImage {
        namespace Parameters {
            export type $0 = OCApi.Parameters.GVID;
            export type $1 = OCApi.Parameters.VisitId /* uuid */;
            export type $2 = OCApi.Parameters.ImageId;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export interface $204 {
            }
            export type $404 = /**
             * The requested resource was not found.
             * example:
             * {
             *   "status": 404,
             *   "message": "Resource not found"
             * }
             */
            OCApi.Schemas.Error404NotFound;
        }
    }
    namespace DeleteToken {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export interface $204 {
            }
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace DeleteVisitImage {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.ImageId;
            export type $2 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export interface $204 {
            }
            export type $404 = /**
             * The requested resource was not found.
             * example:
             * {
             *   "status": 404,
             *   "message": "Resource not found"
             * }
             */
            OCApi.Schemas.Error404NotFound;
        }
    }
    namespace GetAccountById {
        namespace Parameters {
            export type $0 = OCApi.Parameters.AccountId;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "email": "bob@aol.com",
             *   "fullName": "Bob Frog",
             *   "insuranceCarrier": "Blue Cross",
             *   "insuranceGroup": "BC-Plus",
             *   "insuranceGroupId": "45-768393F",
             *   "insuranceId": "123485690F",
             *   "mobilePhone": "555.555.5555",
             *   "phone": "123.456.5555",
             *   "smsNotify": true,
             *   "canChangePassword": true,
             *   "profileContent": {
             *     "allergiesLink": "Allergies",
             *     "documentTitle": "Patient Profile",
             *     "medicationsLink": "Medications",
             *     "patientDashboardLink": "Patient Dashboard",
             *     "patientDetailsLink": "Patient Details",
             *     "visitHistoryLink": "Visit History"
             *   },
             *   "accountContent": {
             *     "profilePersonalInformation": "Personal information",
             *     "accountInsuranceInformation": "Insurance information"
             *   },
             *   "address": {
             *     "id": 2910336,
             *     "address1": "1049 Moore Grove",
             *     "address2": null,
             *     "city": "Minneapolis",
             *     "country": null,
             *     "phone": "(202)345-6789",
             *     "state": "MN",
             *     "zip": "55401",
             *     "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
             *     "latitude": 44.9836543,
             *     "longitude": -93.2693572
             *   }
             * }
             */
            OCApi.Schemas.Account;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetAllergyNames {
        namespace Parameters {
            export type $0 = OCApi.Parameters.SearchQuery;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * [
             *   {
             *     "id": 2009551,
             *     "name": "Cystex (methenamine-benz acid)"
             *   },
             *   {
             *     "id": 2253445,
             *     "name": "Cystex Plus (methenamine-sal)"
             *   }
             * ]
             */
            OCApi.Schemas.NameSearchResponse;
            export type $400 = OCApi.Responses.Error400Response;
        }
    }
    namespace GetConditionByLabel {
        namespace Parameters {
            export type $0 = OCApi.Parameters.ConditionLabel /* ^[a-z0-9_]+$ */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "conditionDetails": {
             *     "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
             *     "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
             *     "icon": {
             *       "imageUrl": "https://example.com/image.png",
             *       "darkModeImageUrl": "https://example.com/dark-mode-image.png",
             *       "altText": "An example icon"
             *     },
             *     "ctaButton": "Questionnaire for hair loss",
             *     "label": "cp_9q_449a_acne",
             *     "urlSlug": "allergies",
             *     "name": "Allergic Rhinitis",
             *     "commonName": "Allergies"
             *   },
             *   "fulfillmentOptions": {
             *     "homeDelivery": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "10.50",
             *           "currency": "USD",
             *           "display": "$10.50"
             *         },
             *         "maxPrice": {
             *           "amount": "20.50",
             *           "currency": "USD",
             *           "display": "$20.50"
             *         }
             *       }
             *     },
             *     "retail": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "8.50",
             *           "currency": "USD",
             *           "display": "$8.50"
             *         },
             *         "maxPrice": {
             *           "amount": "19.50",
             *           "currency": "USD",
             *           "display": "$19.50"
             *         }
             *       }
             *     }
             *   },
             *   "treatmentOptions": [
             *     {
             *       "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
             *       "commonName": "Minoxidil",
             *       "urlSlug": "minoxidil",
             *       "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
             *       "price": {
             *         "amount": "8.50",
             *         "currency": "USD",
             *         "display": "$8.50"
             *       },
             *       "quantity": 30,
             *       "drugType": "BRAND",
             *       "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.Condition;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetConditionByUrlSlug {
        namespace Parameters {
            export type $0 = OCApi.Parameters.UrlSlug /* ^[a-z0-9-]+$ */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "conditionDetails": {
             *     "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
             *     "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
             *     "icon": {
             *       "imageUrl": "https://example.com/image.png",
             *       "darkModeImageUrl": "https://example.com/dark-mode-image.png",
             *       "altText": "An example icon"
             *     },
             *     "ctaButton": "Questionnaire for hair loss",
             *     "label": "cp_9q_449a_acne",
             *     "urlSlug": "allergies",
             *     "name": "Allergic Rhinitis",
             *     "commonName": "Allergies"
             *   },
             *   "fulfillmentOptions": {
             *     "homeDelivery": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "10.50",
             *           "currency": "USD",
             *           "display": "$10.50"
             *         },
             *         "maxPrice": {
             *           "amount": "20.50",
             *           "currency": "USD",
             *           "display": "$20.50"
             *         }
             *       }
             *     },
             *     "retail": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "8.50",
             *           "currency": "USD",
             *           "display": "$8.50"
             *         },
             *         "maxPrice": {
             *           "amount": "19.50",
             *           "currency": "USD",
             *           "display": "$19.50"
             *         }
             *       }
             *     }
             *   },
             *   "treatmentOptions": [
             *     {
             *       "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
             *       "commonName": "Minoxidil",
             *       "urlSlug": "minoxidil",
             *       "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
             *       "price": {
             *         "amount": "8.50",
             *         "currency": "USD",
             *         "display": "$8.50"
             *       },
             *       "quantity": 30,
             *       "drugType": "BRAND",
             *       "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.Condition;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetConditionLegacy {
        namespace Parameters {
            export type $0 = OCApi.Parameters.ConditionLegacy /* ^[a-z0-9_-]+$ */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "conditionDetails": {
             *     "heading": "Restore your hair and your confidence. Get prescribed online in minutes.",
             *     "description": "Fill out a questionnaire online. If you’re approved by one of Optum’s experienced providers, \nyou’ll have your online prescription in less than 15 minutes.\n",
             *     "icon": {
             *       "imageUrl": "https://example.com/image.png",
             *       "darkModeImageUrl": "https://example.com/dark-mode-image.png",
             *       "altText": "An example icon"
             *     },
             *     "ctaButton": "Questionnaire for hair loss",
             *     "label": "cp_9q_449a_acne",
             *     "urlSlug": "allergies",
             *     "name": "Allergic Rhinitis",
             *     "commonName": "Allergies"
             *   },
             *   "fulfillmentOptions": {
             *     "homeDelivery": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "10.50",
             *           "currency": "USD",
             *           "display": "$10.50"
             *         },
             *         "maxPrice": {
             *           "amount": "20.50",
             *           "currency": "USD",
             *           "display": "$20.50"
             *         }
             *       }
             *     },
             *     "retail": {
             *       "drugNames": [
             *         "Minoxidil",
             *         "Finasteride"
             *       ],
             *       "priceRange": {
             *         "label": "Total cost",
             *         "minPrice": {
             *           "amount": "8.50",
             *           "currency": "USD",
             *           "display": "$8.50"
             *         },
             *         "maxPrice": {
             *           "amount": "19.50",
             *           "currency": "USD",
             *           "display": "$19.50"
             *         }
             *       }
             *     }
             *   },
             *   "treatmentOptions": [
             *     {
             *       "perksId": "e82bfafb-eca1-4711-9156-b0f9fc8b54a7",
             *       "commonName": "Minoxidil",
             *       "urlSlug": "minoxidil",
             *       "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
             *       "price": {
             *         "amount": "8.50",
             *         "currency": "USD",
             *         "display": "$8.50"
             *       },
             *       "quantity": 30,
             *       "drugType": "BRAND",
             *       "description": "This medicine is an HMG-CoA reductase inhibitor (also known as a statin) used in combination with..."
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.Condition;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetConditionsByCategory {
        namespace Parameters {
            export type $0 = OCApi.Parameters.Category;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * [
             *   {
             *     "name": "Cold, flu, COVID-19",
             *     "fabricId": 40,
             *     "conditions": [
             *       {
             *         "label": "cp_12q_449a_covid19coronavirus",
             *         "name": "COVID-19",
             *         "primaryDescription": "Evaluation of COVID-19 (coronavirus)",
             *         "primaryImagePath": "/PatientInterface/Conditions/covid-a.webp"
             *       },
             *       {
             *         "label": "cp_12q_449a_respiratory",
             *         "name": "Cold, sinus infection, or flu",
             *         "primaryDescription": "Stuffy or runny nose, cough, sore throat, headache, fever, or muscle aches",
             *         "primaryImagePath": "/PatientInterface/Conditions/uri-a.webp",
             *         "urlSlug": "cold"
             *       },
             *       {
             *         "label": "cp_184q_449a_reason",
             *         "name": "COVID-19 treatments",
             *         "primaryDescription": "Evaluation for COVID-19 treatment for those with a confirmed diagnosis of COVID-19",
             *         "primaryImagePath": "/PatientInterface/Conditions/paxlovid-a.webp",
             *         "urlSlug": "covid-19"
             *       },
             *       {
             *         "label": "cp_41q_449a_reason",
             *         "name": "Flu exposure",
             *         "primaryDescription": "Medication to prevent the flu after a close contact exposure (not for active symptoms)",
             *         "primaryImagePath": "/PatientInterface/Conditions/fluexposure-a.webp",
             *         "urlSlug": "flu"
             *       },
             *       {
             *         "label": "cp_171q_449a_reason",
             *         "name": "Post-COVID discharge (video required)",
             *         "primaryDescription": "COVID-19 (coronavirus) follow-up after being discharged from the hospital or clinic",
             *         "primaryImagePath": "/PatientInterface/Conditions/postcoviddischarge-a.webp",
             *         "urlSlug": "post-covid"
             *       },
             *       {
             *         "label": "cp_42q_449a_reason",
             *         "name": "Whooping cough exposure",
             *         "primaryDescription": "Medication to prevent whooping cough after close contact with a person with the illness",
             *         "primaryImagePath": "/PatientInterface/Conditions/whoopingcough-a.webp",
             *         "urlSlug": "whooping-cough"
             *       }
             *     ]
             *   }
             * ]
             */
            OCApi.Schemas.ConditionListByCategory;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace GetDrugNames {
        namespace Parameters {
            export type $0 = OCApi.Parameters.SearchQuery;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * [
             *   {
             *     "id": 2009551,
             *     "name": "Cystex (methenamine-benz acid)"
             *   },
             *   {
             *     "id": 2253445,
             *     "name": "Cystex Plus (methenamine-sal)"
             *   }
             * ]
             */
            OCApi.Schemas.NameSearchResponse;
            export type $400 = OCApi.Responses.Error400Response;
        }
    }
    namespace GetDrugs {
        namespace Parameters {
            export type $0 = OCApi.Parameters.Ndc;
            export type $1 = OCApi.Parameters.Name;
            export type $2 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export interface $200 {
                results?: /**
                 * example:
                 * {
                 *   "perksId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
                 *   "name": "Minoxidil",
                 *   "drugType": "brand",
                 *   "urlSlug": "atorvastatin",
                 *   "variants": [
                 *     {
                 *       "perksId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
                 *       "urlSlug": "atorvastatin",
                 *       "name": "Lipitor",
                 *       "drugType": "brand"
                 *     }
                 *   ],
                 *   "formulationId": "84b18721-2493-4a31-a5ad-4d81dc1647e4",
                 *   "price": {
                 *     "amount": "10.50",
                 *     "currency": "USD",
                 *     "display": "$10.50"
                 *   },
                 *   "quantity": 50,
                 *   "ndc": "40085031530",
                 *   "protocol": "Acne and rosacea",
                 *   "drugDescription": "erythromycin with ethanol (Erygel) 2 % topical gel",
                 *   "daysSupply": 30,
                 *   "refillCount": 3,
                 *   "drugForm": "gel",
                 *   "strength": "2",
                 *   "strengthQualifier": "%",
                 *   "sig": "Apply to the affected skin 2 times per day",
                 *   "cpid": 9,
                 *   "unitPrice": 74.86
                 * }
                 */
                OCApi.Schemas.Drug[];
            }
            export interface $401 {
            }
        }
    }
    namespace GetGVIDToken {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * This cookie need to be passed in subsequent calls to endpoints for the guest visit that was created.
             *
             * example:
             * {
             *   "gvid": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
             * }
             */
            OCApi.Schemas.GVID;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace GetGuestVisitEligibility {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "stateName": "eligibility",
             *   "title": "Eligibility",
             *   "progressBar": {
             *     "accountSetup": {
             *       "index": 1,
             *       "name": "Account Setup"
             *     },
             *     "eligibility": {
             *       "index": 2,
             *       "name": "Eligibility"
             *     },
             *     "doctorReview": {
             *       "index": 4,
             *       "name": "Provider Review"
             *     },
             *     "interview": {
             *       "index": 3,
             *       "name": "Interview"
             *     },
             *     "payment": {
             *       "index": 5,
             *       "name": "Payment"
             *     },
             *     "personalInformation": {
             *       "index": 6,
             *       "name": "Personal Information"
             *     }
             *   },
             *   "contentLabels": {
             *     "formTitle": "Who is this visit for?",
             *     "forMyselfOption": "Myself",
             *     "forSomeoneOption": "Someone Else",
             *     "aboutYourselfText": "Tell us about yourself",
             *     "ageLabel": "Age",
             *     "locationLabel": "Current location",
             *     "aboutPatientText": "Tell us about the patient",
             *     "continueButton": "Continue",
             *     "dropdownStatePlaceholder": "State",
             *     "dropdownStateNotListed": "My state isn't listed",
             *     "myAgeLabel": "My Age",
             *     "backButton": "Back",
             *     "personalSex": "Sex Assigned at Birth",
             *     "sex": {
             *       "female": "Female",
             *       "male": "Male"
             *     },
             *     "states": [
             *       {
             *         "abbreviation": "MN",
             *         "name": "Minnesota"
             *       }
             *     ]
             *   }
             * }
             */
            OCApi.Schemas.GuestVisitEligibility;
            export type $400 = OCApi.Responses.Error400Response;
        }
    }
    namespace GetGuestVisitInteraction {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "stateName": "clinical_interview",
             *   "title": "Interview Question",
             *   "content": [
             *     {
             *       "contentType": "select_input",
             *       "contentName": "q775",
             *       "contentLabel": "<p>Almost done! Photos of the affected area of the skin are required to diagnose and treat you.</p><p><b>Can photos be taken and uploaded at this time?</b></p>",
             *       "options": [
             *         {
             *           "optionLabel": "Yes",
             *           "optionValue": "yes"
             *         },
             *         {
             *           "optionLabel": "No",
             *           "optionValue": "no"
             *         }
             *       ],
             *       "required": true
             *     }
             *   ],
             *   "progress": {
             *     "clinical_interview": {
             *       "percentage": 28.4
             *     }
             *   },
             *   "actions": {
             *     "continue": {
             *       "actionLabel": "Continue"
             *     },
             *     "goBack": {
             *       "actionLabel": "Back"
             *     }
             *   }
             * }
             */
            OCApi.Schemas.Interaction;
            /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "q884 response is required",
             *       "reason": "q884"
             *     },
             *     {
             *       "message": "q885 response is required",
             *       "reason": "q885"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            export interface $422 {
                status?: number;
                errors?: {
                    message?: string;
                    reason?: string;
                }[];
                message?: string;
            }
        }
    }
    namespace GetHealthCheck {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "server": "healthy",
             *   "redis": "ready",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "ready",
             *   "db": "error"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "wait",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "reconnecting",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "connecting",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "connect",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "close",
             *   "db": "connected"
             * }
             * {
             *   "server": "unhealthy",
             *   "redis": "end",
             *   "db": "connected"
             * }
             */
            OCApi.Schemas.HealthCheck;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetOrderStatus {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * The prescription ordered for home delivery and its fulfillment status
             *
             * example:
             * {
             *   "id": "CLAIMCR",
             *   "createdDate": "2025-01-08",
             *   "shippedDate": "2025-01-10",
             *   "shippingAddress": {
             *     "line1": "123 Willow Way",
             *     "city": "Somewheresville",
             *     "state": "FL",
             *     "zipCode": "11111"
             *   },
             *   "prescription": {
             *     "drugName": "Tylenol",
             *     "strength": "500",
             *     "strengthQualifier": "mg",
             *     "quantityQualifier": "tablet",
             *     "status": "processing"
             *   }
             * }
             */
            OCApi.Schemas.HomeDeliveryOrderStatus;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientAllergies {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientId;
        }
        namespace Responses {
            export interface $200 {
                results?: /**
                 * example:
                 * {
                 *   "id": 3075,
                 *   "state": "active",
                 *   "allergyId": "2006808",
                 *   "name": "Tylenol",
                 *   "externalAllergyId": null,
                 *   "externalCode": null
                 * }
                 */
                OCApi.Schemas.Allergy[];
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientAllergiesMedications {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientId;
        }
        namespace Responses {
            export type $200 = /**
             * List of allergies and medications for the given patient
             * example:
             * {
             *   "allergies": [
             *     {
             *       "id": 3075,
             *       "state": "active",
             *       "allergyId": "2006808",
             *       "name": "Tylenol",
             *       "externalAllergyId": null,
             *       "externalCode": null
             *     }
             *   ],
             *   "medications": [
             *     {
             *       "id": 5006,
             *       "medicationId": "6171233",
             *       "name": "Briviact oral",
             *       "state": "active",
             *       "externalMedicationId": null,
             *       "externalCode": null
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.AllergyMedicationPayload;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientDetails {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.PatientId;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "firstName": "John",
             *   "lastName": "Doe",
             *   "email": "john.doe@example.com"
             * }
             */
            OCApi.Schemas.PatientDetails;
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientMailOrderRequests {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientId;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "mailOrderRequestKey": "FILL13SEP2024013624221",
             *   "orderNumber": "“7537084”,",
             *   "timestamp": "2024-09-13T15:00:44.051716Z",
             *   "status": "Shipped",
             *   "statusMessage": "The Rx has been shipped",
             *   "shipmentCarrier": "“UPS”",
             *   "shipmentDate": "“2024-09-06T06:00:02Z”",
             *   "trackingNumber": "12344567",
             *   "trackingUrl": "https://upstrackingurl?id=12345"
             * }
             */
            OCApi.Schemas.PatientMailOrderRequest;
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientMedications {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientId;
        }
        namespace Responses {
            export interface $200 {
                results?: /**
                 * example:
                 * {
                 *   "id": 5006,
                 *   "medicationId": "6171233",
                 *   "name": "Briviact oral",
                 *   "state": "active",
                 *   "externalMedicationId": null,
                 *   "externalCode": null
                 * }
                 */
                OCApi.Schemas.Medication[];
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientNotifications {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Get the user's current notifications
             *
             * example:
             * {
             *   "notifications": [
             *     {
             *       "id": 123,
             *       "title": "You have a provider response available",
             *       "message": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
             *       "messageType": null,
             *       "category": "treatment_plan",
             *       "force": true,
             *       "viewedAt": "2025-01-03T22:06:29Z",
             *       "createdAt": "2025-01-03T22:06:29Z",
             *       "updatedAt": "2025-01-03T22:06:29Z",
             *       "notificationLinks": [
             *         {
             *           "id": 123,
             *           "href": "/visits/195020/report",
             *           "label": "View Treatment Plan"
             *         }
             *       ]
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.Notification;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatientVisits {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientId;
            export type $1 = OCApi.Parameters.Page;
            export type $2 = OCApi.Parameters.Limit;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Patient Visit History using to list Visit History
             *
             * example:
             * {
             *   "visits": [
             *     {
             *       "id": 123,
             *       "createdAt": "2024-05-20T19:08:56.000Z",
             *       "finishedAt": "2024-06-20T19:08:56.000Z",
             *       "reasonForVisit": "acne",
             *       "state": "prescriptions_expired",
             *       "headerText": "Action required",
             *       "readableState": "Complete your visit",
             *       "subState": "active",
             *       "pending": true,
             *       "prescriptions": [
             *         "triamcinolone acetonide (Oralone) 0.1 % dental paste",
             *         "valacyclovir (Valtrex) 1 gram oral tablet",
             *         "Mupirocin calcium 2 % topical cream"
             *       ]
             *     }
             *   ],
             *   "currentCount": 1,
             *   "currentPage": 1,
             *   "totalCount": 1,
             *   "totalPages": 1
             * }
             */
            OCApi.Schemas.PatientVisitHistory;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPatients {
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "patients": [
             *     {
             *       "id": 44,
             *       "email": "dev@rvohealth.com",
             *       "firstName": "Gugli",
             *       "lastName": "Macaroni",
             *       "birthDate": "1981-03-31",
             *       "insuranceCarrier": null,
             *       "insuranceGroup": null,
             *       "insuranceGroupId": null,
             *       "insuranceId": null,
             *       "mobilePhone": null,
             *       "smsNotify": false,
             *       "canChangePassword": true,
             *       "phone": "16125551234",
             *       "address": {
             *         "id": 45,
             *         "address1": "902 Hannah Crest",
             *         "address2": null,
             *         "city": "Minneapolis",
             *         "country": "USA",
             *         "phone": "",
             *         "state": "MN",
             *         "zip": "55401",
             *         "fullAddress": "902 Hannah Crest,  Minneapolis, MN 55401",
             *         "latitude": null,
             *         "longitude": null
             *       },
             *       "pendingVisits": 2
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.PatientList;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPaymentIntent {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PiSecret /* ^[a-z0-9_]+$ */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_intents/list
             *
             * example:
             * {
             *   "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPa",
             *   "amount": 2000,
             *   "amountReceived": 1500,
             *   "created": "2018-11-13T20:20:39+00:00",
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *   "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMv",
             *   "status": "succeeded",
             *   "lastPaymentError": null
             * }
             */
            OCApi.Schemas.PaymentIntentDetail;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPaymentIntents {
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_intents/list
             *
             * example:
             * {
             *   "transactions": [
             *     {
             *       "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPa",
             *       "amount": 2000,
             *       "amountReceived": 1500,
             *       "created": "2018-11-13T20:20:39+00:00",
             *       "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *       "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMv"
             *     },
             *     {
             *       "paymentIntentId": "pi_3MtwBwLkdIwHu7ix28a3tqPb",
             *       "amount": 75,
             *       "amountReceived": 0,
             *       "created": "2024-11-13T20:20:39+00:00",
             *       "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGI",
             *       "invoiceId": "in_1MtHbELkdIwHu7ixl4OzzPMw"
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.PaymentIntents;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPaymentMethodByName {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PaymentMethodName;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_methods/object
             *
             * example:
             * [
             *   {
             *     "name": "visa 5555",
             *     "lastFour": "5555",
             *     "fingerprint": "Xt5EWLLDS7FJjR1c",
             *     "expireMonth": 8,
             *     "expireYear": 2025
             *   },
             *   {
             *     "name": "amex 3555",
             *     "lastFour": "3555",
             *     "fingerprint": "Ut5EWLLDS7FJjR1c",
             *     "expireMonth": 5,
             *     "expireYear": 2027
             *   }
             * ]
             */
            OCApi.Schemas.PaymentMethods;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPaymentMethods {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_methods/object
             *
             * example:
             * [
             *   {
             *     "name": "visa 5555",
             *     "lastFour": "5555",
             *     "fingerprint": "Xt5EWLLDS7FJjR1c",
             *     "expireMonth": 8,
             *     "expireYear": 2025
             *   },
             *   {
             *     "name": "amex 3555",
             *     "lastFour": "3555",
             *     "fingerprint": "Ut5EWLLDS7FJjR1c",
             *     "expireMonth": 5,
             *     "expireYear": 2027
             *   }
             * ]
             */
            OCApi.Schemas.PaymentMethods;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPerformanceMetrics {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.XAdminKey;
            export type $2 = OCApi.Parameters.Reset;
        }
        namespace Responses {
            export interface $200 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPharmacyCouponsDiscountCard {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PharmacyId;
            export type $1 = OCApi.Parameters.CouponId;
            export type $2 = OCApi.Parameters.UserAgent;
            export type $3 = OCApi.Parameters.AcceptLanguage;
            export type $4 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * It includes the discount coupons details.
             *
             * example:
             * {
             *   "pcn": "CLAIMCR",
             *   "bin": "005947",
             *   "uid": "APD1066745",
             *   "grp": "1858CCC"
             * }
             */
            OCApi.Schemas.DiscountCard;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPharmacyListByVisitId {
        namespace Parameters {
            export type $0 = OCApi.Parameters.DeliveryType;
            export type $1 = OCApi.Parameters.VisitId /* uuid */;
            export type $2 = OCApi.Parameters.ZipCode;
            export type $3 = OCApi.Parameters.PharmacyName;
            export type $4 = OCApi.Parameters.Ndc;
            export type $5 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Composite DTO for pharmacies endpoint.  Limited to 100 results.
             *
             * example:
             * {
             *   "searchParameters": {
             *     "deliveryType": "MailOrder",
             *     "ndc": "0169-4307-30",
             *     "patientId": "187",
             *     "pharmacyName": "CSV",
             *     "zipCode": "12345"
             *   },
             *   "prescribedDrugs": [
             *     {
             *       "ndc": "31722092601",
             *       "formulationId": "72162199205",
             *       "name": "Methylphenidate",
             *       "variants": [
             *         {
             *           "ndc": "71376020103",
             *           "formulationId": "72162199205",
             *           "name": "Jornay Pm"
             *         }
             *       ]
             *     }
             *   ],
             *   "pharmacies": [
             *     {
             *       "isPickup": true,
             *       "isPricingLowest": true,
             *       "isDelivery": true,
             *       "perksId": "00605",
             *       "name": "Apci Choice (Hma 605)",
             *       "location": {
             *         "addressLine1": "TEST MAIN",
             *         "addressLine2": "Suite 102",
             *         "city": "MINNEAPOLIS",
             *         "country": "USA",
             *         "state": "MN",
             *         "zipCode": "55401",
             *         "phoneNumber": "256-555-5555"
             *       },
             *       "businessHours": [
             *         {
             *           "open": {
             *             "day": "Monday",
             *             "time": "8:00"
             *           },
             *           "close": {
             *             "day": "Monday",
             *             "time": "18:00"
             *           }
             *         }
             *       ],
             *       "availableDrugs": [
             *         {
             *           "ndc": "31722092601",
             *           "formulationId": "72162199205",
             *           "name": "Methylphenidate",
             *           "couponId": "005947",
             *           "price": {
             *             "amount": "10.50",
             *             "currency": "USD",
             *             "display": "$10.50"
             *           }
             *         }
             *       ],
             *       "totalPrice": {
             *         "amount": "10.50",
             *         "currency": "USD",
             *         "display": "$10.50"
             *       }
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.PharmacyList;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetPromoCode {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PromoCode;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/promotion_codes/list
             *
             * example:
             * {
             *   "active": true,
             *   "code": "A1H1Q1MG",
             *   "couponId": "nVJYDOag",
             *   "amountOff": 0,
             *   "percentOff": 25.5
             * }
             */
            OCApi.Schemas.PaymentDiscount;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetSchoolOrWorkNotesDownload {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetSelectPharmacyForVisit {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.PharmacyId;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "isDelivery": true,
             *   "isPickup": true,
             *   "isPricingLowest": true,
             *   "perksId": "00605",
             *   "name": "Apci Choice (Hma 605)",
             *   "location": {
             *     "addressLine1": "TEST MAIN",
             *     "addressLine2": "Suite 102",
             *     "city": "MINNEAPOLIS",
             *     "country": "USA",
             *     "state": "MN",
             *     "zipCode": "55401",
             *     "phoneNumber": "256-555-5555"
             *   },
             *   "businessHours": [
             *     {
             *       "open": {
             *         "day": "Monday",
             *         "time": "8:00"
             *       },
             *       "close": {
             *         "day": "Monday",
             *         "time": "18:00"
             *       }
             *     }
             *   ],
             *   "availableDrugs": [
             *     {
             *       "ndc": "31722092601",
             *       "formulationId": "72162199205",
             *       "name": "Methylphenidate",
             *       "couponId": "005947",
             *       "price": {
             *         "amount": "10.50",
             *         "currency": "USD",
             *         "display": "$10.50"
             *       }
             *     }
             *   ],
             *   "totalPrice": {
             *     "amount": "10.50",
             *     "currency": "USD",
             *     "display": "$10.50"
             *   }
             * }
             */
            OCApi.Schemas.Pharmacy;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetSessionData {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.XAdminKey;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "clinicSerial": [
             *     "123456789",
             *     "588834993"
             *   ],
             *   "cosmosId": "123457890",
             *   "fabricId": 123457890,
             *   "fabricGVID": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
             *   "fabricJwtExpires": "2024-12-31",
             *   "fabricMfaToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
             *   "fabricLoggedIn": "true",
             *   "sessionId": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
             *   "sessionInvalidates": 1,
             *   "tokenExpires": "2024-12-31"
             * }
             */
            OCApi.Schemas.SessionData;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace GetToken {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * The token is used to authenticate the user for the duration of the tokenExpires time.
             * The token is used in the header for all requests that require authentication.
             *
             * example:
             * {
             *   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
             *   "tokenExpires": "2024-05-26T10:15:00",
             *   "userId": 987654,
             *   "passwordExpired": false,
             *   "roles": [
             *     "user"
             *   ],
             *   "clinicSerial": "CLN123456789",
             *   "completedProfile": true,
             *   "phoneVerificationRequired": false
             * }
             */
            OCApi.Schemas.Token;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace GetTreatmentPlanById {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.UserAgent;
            export type $2 = OCApi.Parameters.AcceptLanguage;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * The treatment plan is the result of a completed consult.
             * It includes the patient information, the doctor who completed the consult,
             * the prescriptions, and the triage options.
             *
             * example:
             * {
             *   "fabricId": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
             *   "assessmentText": "You have a sinus infection.",
             *   "patientId": "9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d",
             *   "patientFirstName": "Hans",
             *   "patientLastName": "Moleman",
             *   "patientZip": "90210",
             *   "state": "CA",
             *   "patientBirthDate": "1980-01-01",
             *   "patientPhone": "555-555-5555",
             *   "chiefComplaint": "I have a sore throat.",
             *   "reasonForVisit": "Cold, sinus infection, or flu",
             *   "prescriptions": [
             *     {
             *       "drugName": "Amoxicillin",
             *       "ndcCode": "50090-0301",
             *       "quantity": 30,
             *       "strength": "500mg",
             *       "refills": 3,
             *       "drugForm": "Tablet",
             *       "daysSupply": 10,
             *       "description": "Take one tablet by mouth every 8 hours for 10 days."
             *     }
             *   ],
             *   "createdAt": "2024-05-26T09:46:00Z",
             *   "finishedAt": "2024-05-26T10:02:00Z",
             *   "headerText": "Your treatment plan",
             *   "icdCode": "J01.90",
             *   "labelText": "Recommended medications",
             *   "requiredTriageOption": "ScheduleDoctorVisit",
             *   "tags": [
             *     "sinus infection"
             *   ],
             *   "triageRequired": true,
             *   "patientMrn": "123456",
             *   "doctor": {
             *     "fabricId": "123e4567-e89b-12d3-a456-426614174000",
             *     "firstName": "Nick",
             *     "lastName": "Riviera",
             *     "title": "MD"
             *   }
             * }
             */
            OCApi.Schemas.TreatmentPlan;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetTreatmentPlanReport {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * This returns the treatment plan detailed report that is generated after a completed consult.
             * It includes the doctor summray, prescribed medications information, school/work notes, self care, visit follow up, and payment information.
             *
             * example:
             * {
             *   "report": {
             *     "allowPatientComments": false,
             *     "clinicianFooter": "Clinician Footer",
             *     "createdAt": "2024-08-29T21:06:03Z",
             *     "commentableExpirationDate": "2024-08-30",
             *     "completeBy": "2021-09-29T00:00:00Z",
             *     "doctorSummary": "<p><b>Dear Harsh,</b></p><p>Based on the information provided, you have <b>viral sinusitis</b>, also known as a sinus infection. Sinus infections are caused by bacteria or a virus and symptoms are almost always identical. The difference between the 2 types of infections is timing.</p><p>Sinus infections start as viral infections and symptoms improve on their own in about 7 days. A bacterial infection may have developed if any of the following apply to you:</p><ul>\n<li>You have had 7 days of symptoms and are experiencing at least 2 of the following:</li>\n<ul>\n<li>Fever</li>\n<li>Facial pressure or headache</li>\n<li>Green or yellow nasal mucus</li>\n<li>Symptoms that improved and then got worse again</li>\n</ul>\n<li>You have had symptoms for 10 or more days</li>\n</ul><h3>Medication information</h3><p>Because you have a viral infection, antibiotics will not help you get better. Treating a viral infection with antibiotics could actually make you feel worse.</p><p>I am prescribing:</p><ul><li>\n<b>Ibuprofen 800 mg oral tablet.</b> Take 1 tablet by mouth 3 times per day as needed for 7 days. Do not exceed 2400mg in 24 hours. There are no refills with this prescription.</li></ul><h3>Self care</h3><p>Steps you can take to be as comfortable as possible:</p><ul>\n<li>Rest.</li>\n<li>Drink plenty of fluids.</li>\n<li>Take a warm shower to loosen congestion</li>\n<li>Use a cool-mist humidifier.</li>\n<li>Use throat lozenges.</li>\n<li>Suck on frozen items such as popsicles.</li>\n<li>Drink hot tea with lemon and honey.</li>\n<li>Gargle with warm salt water (1/4 teaspoon of salt per 8 ounce glass of water).</li>\n</ul><h3>When to seek care</h3><p>Please be seen in a clinic or urgent care if any of the following occur:</p><ul><li>New symptoms develop, or symptoms become worse</li></ul><p><b>Call 911 or go to the emergency room if any of the following occur:</b></p><ul>\n<li>Difficulty breathing</li>\n<li>If you feel that your throat is closing off</li>\n<li>Suddenly develop a rash</li>\n<li>Unable to swallow fluids or are drooling</li>\n</ul><p>For the latest updates on COVID-19 (Coronavirus), please visit the <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/index.html\" target=\"_blank\" rel=\"nofollow\">Centers for Disease Control and Prevention (CDC)</a>. Also, your state and local health department websites may provide additional guidance regarding testing and isolation recommendations for your location.</p>",
             *     "doctorSummaryBasicText": "Dear Harsh,\n\nBased on the information provided, you have viral sinusitis, also\nknown as a sinus infection. Sinus infections are caused by\nbacteria or a virus and symptoms are almost always identical. The\ndifference between the 2 types of infections is timing.\n\nSinus infections start as viral infections and symptoms improve\non their own in about 7 days. A bacterial infection may have\ndeveloped if any of the following apply to you:\n\n* You have had 7 days of symptoms and are experiencing at least 2\nof the following:\n* Fever\n* Facial pressure or headache\n* Green or yellow nasal mucus\n* Symptoms that improved and then got worse again\n* You have had symptoms for 10 or more days\n\nMedication information\n----------------------\n\nBecause you have a viral infection, antibiotics will not help you\nget better. Treating a viral infection with antibiotics could\nactually make you feel worse.\n\nI am prescribing:\n\n* Ibuprofen 800 mg oral tablet. Take 1 tablet by mouth 3 times\nper day as needed for 7 days. Do not exceed 2400mg in 24 hours.\nThere are no refills with this prescription.\n\nSelf care\n---------\n\nSteps you can take to be as comfortable as possible:\n\n* Rest.\n* Drink plenty of fluids.\n* Take a warm shower to loosen congestion\n* Use a cool-mist humidifier.\n* Use throat lozenges.\n* Suck on frozen items such as popsicles.\n* Drink hot tea with lemon and honey.\n* Gargle with warm salt water (1/4 teaspoon of salt per 8 ounce\nglass of water).\n\nWhen to seek care\n-----------------\n\nPlease be seen in a clinic or urgent care if any of the following\noccur:\n\n* New symptoms develop, or symptoms become worse\nCall 911 or go to the emergency room if any of the following\noccur:\n\n* Difficulty breathing\n* If you feel that your throat is closing off\n* Suddenly develop a rash\n* Unable to swallow fluids or are drooling\nFor the latest updates on COVID-19 (Coronavirus), please visit\nthe Centers for Disease Control and Prevention (CDC) \n( https://www.cdc.gov/coronavirus/2019-ncov/index.html ). Also,\nyour state and local health department websites may provide\nadditional guidance regarding testing and isolation\nrecommendations for your location.",
             *     "hideSendMessages": false,
             *     "id": 37362,
             *     "orderTransactions": [
             *       {
             *         "amount": 2500,
             *         "basePrice": 2500,
             *         "createdAt": "2024-08-29T17:41:30Z",
             *         "description": "ZIP(visit) #190507 to Optum Perks MN",
             *         "freeVisitReason": null,
             *         "insuranceBilledAmount": null,
             *         "insuranceBilledAt": null,
             *         "insurancePaidAmount": null,
             *         "insurancePaidAt": null,
             *         "promoCode": null,
             *         "promoCodeAmount": null,
             *         "refundAmount": null,
             *         "transactionType": "Visit",
             *         "zipGroupDiscountAmount": null,
             *         "stripePaymentAmount": 2500
             *       }
             *     ],
             *     "prescriptions": [
             *       {
             *         "drugName": "Amoxicillin",
             *         "ndcCode": "50090-0301",
             *         "quantity": 30,
             *         "strength": "500mg",
             *         "refills": 3,
             *         "drugForm": "Tablet",
             *         "daysSupply": 10,
             *         "description": "Take one tablet by mouth every 8 hours for 10 days."
             *       }
             *     ],
             *     "prescriptionChangePeriodActive": false,
             *     "schoolWorkNote": {
             *       "evaluationDateCopy": "Harsh Patel has been evaluated and received care on 8/29/2024.",
             *       "firstDateOfAbsence": "2024-08-29T00:00:00Z",
             *       "hideSendMessages": false,
             *       "id": 2452,
             *       "notes": null,
             *       "returnMessageCopy": "Harsh can return to school/work without restrictions on 9/3/2024.",
             *       "updatedAt": "2024-08-29T21:06:03Z"
             *     },
             *     "updatePrescriptionAccordionVisible": false,
             *     "updateTreatmentPlanVisible": false
             *   },
             *   "content": {
             *     "medicalEmergencyAttentionText": "<span class=\"attention-color\">If you are experiencing a medical emergency, please call</span>\n<a class=\"attention-color\" href=\"tel:911\" style=\"text-decoration: none; cursor: default;\" rel=\"nofollow\">911</a>\n",
             *     "callSupportInstruction": "If your question is not specific to your visit treatment plan, please contact Customer Support: <a class=\"footer-support-phone\" style=\"text-decoration: none; cursor: default;\" rel=\"nofollow\">(866) 714-3330</a>",
             *     "oneMoreQuestionText": "Please enter your question and a phone number you can be reached at if the provider needs to contact you.",
             *     "oneMoreQuestionButtonText": "Send message"
             *   }
             * }
             */
            OCApi.Schemas.TreatmentPlanReport;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetTreatmentPlanReportReceipt {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.UserAgent;
            export type $2 = OCApi.Parameters.AcceptLanguage;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * The report receipt is the result of a completed consult.
             * It includes the business information, the stripe payment invoice information.
             * It includes the items purchased, the total amount, subtotal amount, taxes and the payment method.
             *
             * example:
             * {
             *   "business": {
             *     "name": "Business Name",
             *     "logo": "https://business.com/logo.png",
             *     "phone": "+1234567890",
             *     "email": "test@email.net",
             *     "website": "https://business.com"
             *   },
             *   "invoice": "invoice_id",
             *   "datePurchased": "2021-09-01T00:00:00Z",
             *   "paymentMethod": {
             *     "type": "card",
             *     "card": {
             *       "brand": "Visa",
             *       "last4": "4242"
             *     }
             *   },
             *   "items": [
             *     {
             *       "description": "Consultation",
             *       "quantity": 1,
             *       "price": {
             *         "currency": "USD",
             *         "amount": 100
             *       },
             *       "subtotal": {
             *         "currency": "USD",
             *         "amount": 100
             *       },
             *       "discount": [
             *         {
             *           "coupon": {
             *             "amountOff": 10,
             *             "created": "2021-09-01T00:00:00Z",
             *             "currency": "USD",
             *             "duration": "forever",
             *             "durationInMonths": null,
             *             "name": "10% off",
             *             "percentOff": null,
             *             "valid": true
             *           },
             *           "customer": "customer_id",
             *           "promotionCode": null,
             *           "startDate": 1630454400
             *         }
             *       ]
             *     }
             *   ],
             *   "subtotal": {
             *     "currency": "USD",
             *     "amount": 100
             *   },
             *   "taxes": {
             *     "currency": "USD",
             *     "amount": 10
             *   },
             *   "totalAmount": {
             *     "currency": "USD",
             *     "amount": 110
             *   }
             * }
             */
            OCApi.Schemas.ReportReceipt;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace GetTreatmentPlanSuccessMessage {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PatientName /* uuid */;
            export type $1 = OCApi.Parameters.UserAgent;
            export type $2 = OCApi.Parameters.AcceptLanguage;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Static content indicating that a treament plan has successfully been created.
             *
             * example:
             * {
             *   "treatmentPlanCreatedFirstPerson": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
             *   "treatmentPlanCreatedThirdPerson": "Thank you for using Optum Perks Online Care! A provider has reviewed Hans's symptoms and created a treatment plan.",
             *   "treatmentPlanAvailable": "Your Treatment Plan is Available."
             * }
             */
            OCApi.Schemas.TreatmentPlanSuccessContent;
            export type $401 = /**
             * The request is missing a valid token.
             * example:
             * {
             *   "status": 401,
             *   "message": "Unauthorized"
             * }
             */
            OCApi.Schemas.Error401Unauthorized;
            export type $404 = /**
             * The requested resource was not found.
             * example:
             * {
             *   "status": 404,
             *   "message": "Resource not found"
             * }
             */
            OCApi.Schemas.Error404NotFound;
        }
    }
    namespace GetVisitInteraction {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.UserAgent;
            export type $2 = OCApi.Parameters.AcceptLanguage;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "stateName": "clinical_interview",
             *   "title": "Interview Question",
             *   "content": [
             *     {
             *       "contentType": "select_input",
             *       "contentName": "q775",
             *       "contentLabel": "<p>Almost done! Photos of the affected area of the skin are required to diagnose and treat you.</p><p><b>Can photos be taken and uploaded at this time?</b></p>",
             *       "options": [
             *         {
             *           "optionLabel": "Yes",
             *           "optionValue": "yes"
             *         },
             *         {
             *           "optionLabel": "No",
             *           "optionValue": "no"
             *         }
             *       ],
             *       "required": true
             *     }
             *   ],
             *   "progress": {
             *     "clinical_interview": {
             *       "percentage": 28.4
             *     }
             *   },
             *   "actions": {
             *     "continue": {
             *       "actionLabel": "Continue"
             *     },
             *     "goBack": {
             *       "actionLabel": "Back"
             *     }
             *   }
             * }
             */
            OCApi.Schemas.Interaction;
            /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "q884 response is required",
             *       "reason": "q884"
             *     },
             *     {
             *       "message": "q885 response is required",
             *       "reason": "q885"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            export interface $422 {
                status?: number;
                errors?: {
                    message?: string;
                    reason?: string;
                }[];
                message?: string;
            }
        }
    }
    namespace GetVisits {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Patient Visit History using to list Visit History
             *
             * example:
             * {
             *   "visits": [
             *     {
             *       "id": 123,
             *       "createdAt": "2024-05-20T19:08:56.000Z",
             *       "finishedAt": "2024-06-20T19:08:56.000Z",
             *       "reasonForVisit": "acne",
             *       "state": "prescriptions_expired",
             *       "headerText": "Action required",
             *       "readableState": "Complete your visit",
             *       "subState": "active",
             *       "pending": true,
             *       "prescriptions": [
             *         "triamcinolone acetonide (Oralone) 0.1 % dental paste",
             *         "valacyclovir (Valtrex) 1 gram oral tablet",
             *         "Mupirocin calcium 2 % topical cream"
             *       ]
             *     }
             *   ],
             *   "currentCount": 1,
             *   "currentPage": 1,
             *   "totalCount": 1,
             *   "totalPages": 1
             * }
             */
            OCApi.Schemas.PatientVisitHistory;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PatchPatientDetails {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.PatientId;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "email": "john.doe@example.com"
         * }
         */
        OCApi.Schemas.PatientDetails;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "firstName": "John",
             *   "lastName": "Doe",
             *   "email": "john.doe@example.com"
             * }
             */
            OCApi.Schemas.PatientDetails;
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PostConditions {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "rows": [
         *     {
         *       "id": 3139,
         *       "name": "Acute Tenosynovitis",
         *       "commonName": "Tenosynovitis",
         *       "urlSlug": "tenosynovitis",
         *       "fabricLabel": "cp_7q_449a_bladderinfection"
         *     }
         *   ]
         * }
         */
        OCApi.Schemas.ConditionMappingCsv;
        namespace Responses {
            export interface $201 {
            }
            export interface $400 {
            }
        }
    }
    namespace PostConfirmAccount {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "confirmationToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        OCApi.Schemas.TokenVerify;
        namespace Responses {
            export interface $201 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
        }
    }
    namespace PostCreatePaymentIntent {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * See https://docs.stripe.com/api/payment_intents/create
         *
         * example:
         * {
         *   "amount": 1099,
         *   "customerId": "cus_NffrFeUfNV2Hib",
         *   "currency": "usd"
         * }
         */
        OCApi.Schemas.PaymentIntentInput;
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_intents/create
             *
             * example:
             * {
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH"
             * }
             * {
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje"
             * }
             * {
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje",
             *   "customerId": "cus_NffrFeUfNV2Hib"
             * }
             * {
             *   "piClientSecret": "pi_3MtwBwLkdIwHu7ix28a3tqPa_secret_YrKJUKribcBjcG8HVhfZluoGH",
             *   "csClientSecret": "_POpxYpmkXdtttYtZQYhrsOJZ2RCQ9kCqqXRU6qrP5c4Jgje",
             *   "customerId": "cus_NffrFeUfNV2Hib",
             *   "id": "pi_3MtwBwLkdIwHu7ix28a3tqPa"
             * }
             */
            OCApi.Schemas.PaymentIntent;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PostCreatePaymentMethod {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * See https://docs.stripe.com/api/payment_methods/object
         *
         * example:
         * {
         *   "name": "visa 5555",
         *   "lastFour": "5555",
         *   "fingerprint": "Xt5EWLLDS7FJjR1c",
         *   "expireMonth": 8,
         *   "expireYear": 2025
         * }
         */
        OCApi.Schemas.PaymentMethod;
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_methods/object
             *
             * example:
             * {
             *   "name": "visa 5555",
             *   "lastFour": "5555",
             *   "fingerprint": "Xt5EWLLDS7FJjR1c",
             *   "expireMonth": 8,
             *   "expireYear": 2025
             * }
             */
            OCApi.Schemas.PaymentMethod;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PostDrugs {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "rows": [
         *     {
         *       "protocol": "Acne and rosacea",
         *       "ndc": "66993095931",
         *       "drug_description": "clindamycin-tretinoin (Ziana) 1.2-0.025 % topical gel",
         *       "quantity": "1",
         *       "days_supply": "30",
         *       "refill_count": "3",
         *       "drug_form": "gel",
         *       "strength": "1.2-0.025",
         *       "strength_qualifier": "%",
         *       "sig": "Apply to the affected skin 1 time per day at bedtime",
         *       "cpid": "9",
         *       "unit_price": "88.4"
         *     }
         *   ]
         * }
         */
        OCApi.Schemas.DrugListCsv;
        namespace Responses {
            export interface $201 {
            }
            export interface $400 {
            }
        }
    }
    namespace PostFabricToken {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        OCApi.Schemas.FabricToken;
        namespace Responses {
            export interface $201 {
            }
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace PostGuestVisit {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.UtmSource;
            export type $2 = OCApi.Parameters.UtmMedium;
            export type $3 = OCApi.Parameters.UtmCampaign;
            export type $4 = OCApi.Parameters.UtmTerm;
            export type $5 = OCApi.Parameters.UtmContent;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "guestVisit": {
         *     "addressState": "MN",
         *     "patientBirthDate": "1987-04-03",
         *     "patientGender": "male",
         *     "preparerBirthDate": "null",
         *     "dependentVisit": false,
         *     "patientAge": 34
         *   },
         *   "conditionLabel": "cp_9q_449a_acne"
         * }
         */
        OCApi.Schemas.GuestVisitInput;
        namespace Responses {
            export type $201 = /**
             * example:
             * {
             *   "id": "123e4567-e89b-12d3-a456-426614174000"
             * }
             */
            OCApi.Schemas.Visit;
            export type $422 = /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "<field> can't be blank",
             *       "reason": "<field_id>"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            OCApi.Schemas.Error422UnprocessableEntity;
        }
    }
    namespace PostGuestVisitImage {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.ContentType;
            export type $2 = OCApi.Parameters.GVID;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "questionZid": "q779",
         *   "file": "(binary)"
         * }
         */
        OCApi.Schemas.ImageInput;
        namespace Responses {
            export type $201 = /**
             * example:
             * {
             *   "id": 17180,
             *   "fileName": "skin-rash-left-hand.jpg",
             *   "questionIdentifier": "q779"
             * }
             */
            OCApi.Schemas.Image;
            export type $403 = /**
             * Forbidden
             * example:
             * {
             *   "status": 403,
             *   "message": "403 Forbidden"
             * }
             */
            OCApi.Schemas.Error403Forbidden;
        }
    }
    namespace PostGuestVisitInteraction {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "actionName": "continue",
         *   "responses": {
         *     "q857": "ihaveneverbeenprescribedtreatmentforthiscondition",
         *     "q858": "yes"
         *   }
         * }
         */
        OCApi.Schemas.InteractionInput;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "stateName": "clinical_interview",
             *   "title": "Interview Question",
             *   "content": [
             *     {
             *       "contentType": "select_input",
             *       "contentName": "q775",
             *       "contentLabel": "<p>Almost done! Photos of the affected area of the skin are required to diagnose and treat you.</p><p><b>Can photos be taken and uploaded at this time?</b></p>",
             *       "options": [
             *         {
             *           "optionLabel": "Yes",
             *           "optionValue": "yes"
             *         },
             *         {
             *           "optionLabel": "No",
             *           "optionValue": "no"
             *         }
             *       ],
             *       "required": true
             *     }
             *   ],
             *   "progress": {
             *     "clinical_interview": {
             *       "percentage": 28.4
             *     }
             *   },
             *   "actions": {
             *     "continue": {
             *       "actionLabel": "Continue"
             *     },
             *     "goBack": {
             *       "actionLabel": "Back"
             *     }
             *   }
             * }
             */
            OCApi.Schemas.Interaction;
            /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "q884 response is required",
             *       "reason": "q884"
             *     },
             *     {
             *       "message": "q885 response is required",
             *       "reason": "q885"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            export interface $422 {
                status?: number;
                errors?: {
                    message?: string;
                    reason?: string;
                }[];
                message?: string;
            }
        }
    }
    namespace PostLogin {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * The token is used to authenticate the user for the duration of the tokenExpires time.
         * The token is used in the header for all requests that require authentication.
         *
         * example:
         * {
         *   "token": "ZTU0YTNkOTYtNTE1Ni00YTE0LWFiZDQtYzI2ZjdlYmVmYmQ5"
         * }
         */
        OCApi.Schemas.Adb2cToken;
        namespace Responses {
            export interface $201 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
        }
    }
    namespace PostLogout {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export interface $204 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
        }
    }
    namespace PostPatient {
        export type RequestBody = /**
         * example:
         * {
         *   "firstName": "John",
         *   "lastName": "Doe",
         *   "birthDate": "2010-01-01",
         *   "gender": "male",
         *   "relationship": "Child"
         * }
         */
        OCApi.Schemas.PatientCreatePayload;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "firstName": "John",
             *   "lastName": "Doe",
             *   "birthDate": "2010-01-01",
             *   "gender": "male",
             *   "id": 44366,
             *   "dependent": true,
             *   "relationship": "Child",
             *   "primaryPatientId": 99999
             * }
             */
            OCApi.Schemas.PatientRecord;
            export type $400 = OCApi.Responses.Error400Response;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PostStripeWebhook {
        /**
         * example:
         * {
         *   "id": "evt_1HhZsW2eZvKYlo2CVJXsLs5A",
         *   "object": "event",
         *   "type": "checkout.session.completed",
         *   "data": {
         *     "object": {
         *       "id": "cs_test_a1ZxsX2eZ3YxUVJ1rYPmP2M5U",
         *       "amount": 5000,
         *       "currency": "usd",
         *       "customer": "cus_JGgrsxEiwxZ2Vg",
         *       "metadata": {
         *         "zipAuth": "eyJhbGciOiJIUzI1NiIsImlzcyI6InppcG5vc2lzIn0.eyJ1c2VyX2lkIjo5MDMzOSwiaWF0IjoxNzI0ODgwMzYwLCJleHAiOjE3MjQ4ODEyNjAsImlzcyI6InppcG5vc2lzIiwiandlX3Rva2VuIjpudWxsfQ.3j3KSCTSYbket8jFZQfcsDulJwWiY88bNRzJxaN6Sn4",
         *         "visitId": "67152283-1c7c-432a-9970-8b2bb8fccc51"
         *       },
         *       "paid": true,
         *       "payment_intent": "pi_3QzjCrAGjvV1XAXX1xAa2iFS",
         *       "payment_method": "pm_3QzjCrAGjvV1XAXX1xAa2iFS"
         *     }
         *   }
         * }
         */
        export interface RequestBody {
            /**
             * The unique identifier for the event.
             * example:
             * evt_1HhZsW2eZvKYlo2CVJXsLs5A
             */
            id?: string;
            /**
             * The type of object in the event (i.e. request.body.event [`event`]).
             * example:
             * event
             */
            object?: string;
            /**
             * The type of event from Stripe (i.e. request.body.event.type [`checkout.session.completed`]).
             * example:
             * charge.succeeded
             */
            type?: string;
            data?: {
                /**
                 * The main data object in the event, e.g., a session or a payment.
                 */
                object?: {
                    /**
                     * The unique identifier for the object within Stripe.
                     * example:
                     * cs_test_a1ZxsX2eZ3YxUVJ1rYPmP2M5U
                     */
                    id?: string;
                    /**
                     * The total amount for the session, in cents (or smallest currency unit).
                     * example:
                     * 5000
                     */
                    amount?: number;
                    /**
                     * Currency of transaction.
                     * example:
                     * usd
                     */
                    currency?: string;
                    /**
                     * The Stripe customer ID related to the event.
                     * example:
                     * cus_JGgrsxEiwxZ2Vg
                     */
                    customer?: string;
                    /**
                     * Any metadata params passed into the origin payment intent.
                     */
                    metadata?: {
                        /**
                         * Zipnosis auth required for webhook to call Fabric promo_code endpoint.
                         * example:
                         * eyJhbGciOiJIUzI1NiIsImlzcyI6InppcG5vc2lzIn0.eyJ1c2VyX2lkIjo5MDMzOSwiaWF0IjoxNzI0ODgwMzYwLCJleHAiOjE3MjQ4ODEyNjAsImlzcyI6InppcG5vc2lzIiwiandlX3Rva2VuIjpudWxsfQ.3j3KSCTSYbket8jFZQfcsDulJwWiY88bNRzJxaN6Sn4
                         */
                        zipAuth?: string;
                        /**
                         * Visit id attached to this payment.
                         * example:
                         * 67152283-1c7c-432a-9970-8b2bb8fccc51
                         */
                        visitId?: string;
                    };
                    /**
                     * Paid success or fail.
                     * example:
                     * true
                     */
                    paid?: boolean;
                    /**
                     * Payment intent ID.
                     * example:
                     * pi_3QzjCrAGjvV1XAXX1xAa2iFS
                     */
                    payment_intent?: string;
                    /**
                     * Customer payment method ID used for transaction.
                     * example:
                     * pm_3QzjCrAGjvV1XAXX1xAa2iFS
                     */
                    payment_method?: string;
                };
            };
        }
        namespace Responses {
            export interface $200 {
            }
            export interface $400 {
            }
            export interface $500 {
            }
        }
    }
    namespace PostTreatmentPlanComment {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        /**
         * example:
         * {
         *   "comment": "Should I stop taking this if my symptoms improve?<br>Patient's phone number is: 1 (320) 310-9771"
         * }
         */
        export interface RequestBody {
            /**
             * The comment/question to post.
             * The patient's phone number should be included in the comment.
             *
             */
            comment?: string;
        }
        namespace Responses {
            export type $200 = /**
             * Comment on treatment plan
             *
             * example:
             * {
             *   "id": 5809,
             *   "comment": "Should I stop taking this if my symptoms improve?<br>Patient's phone number is: 1 (320) 310-9771",
             *   "commentableId": 109318,
             *   "commentableType": "Visit",
             *   "createdAt": "2024-09-16T17:40:28Z",
             *   "endsConversation": false,
             *   "needsReview": true,
             *   "reviewedByClinicianAt": null,
             *   "targetAudience": [
             *     "doctor"
             *   ],
             *   "title": "",
             *   "updatedAt": "2024-09-16T17:40:28Z",
             *   "userId": 1769
             * }
             */
            OCApi.Schemas.TreatmentPlanComment;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace PostVisit {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
            export type $1 = OCApi.Parameters.UtmSource;
            export type $2 = OCApi.Parameters.UtmMedium;
            export type $3 = OCApi.Parameters.UtmCampaign;
            export type $4 = OCApi.Parameters.UtmTerm;
            export type $5 = OCApi.Parameters.UtmContent;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "conditionLabel": "cp_9q_449a_acne",
         *   "locationState": "MN"
         * }
         */
        OCApi.Schemas.VisitInput;
        namespace Responses {
            export type $201 = /**
             * example:
             * {
             *   "id": "123e4567-e89b-12d3-a456-426614174000"
             * }
             */
            OCApi.Schemas.Visit;
            export type $422 = /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "<field> can't be blank",
             *       "reason": "<field_id>"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            OCApi.Schemas.Error422UnprocessableEntity;
        }
    }
    namespace PostVisitImage {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.ContentType;
            export type $2 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "questionZid": "q779",
         *   "file": "(binary)"
         * }
         */
        OCApi.Schemas.ImageInput;
        namespace Responses {
            export type $201 = /**
             * example:
             * {
             *   "id": 17180,
             *   "fileName": "skin-rash-left-hand.jpg",
             *   "questionIdentifier": "q779"
             * }
             */
            OCApi.Schemas.Image;
            export type $403 = /**
             * Forbidden
             * example:
             * {
             *   "status": 403,
             *   "message": "403 Forbidden"
             * }
             */
            OCApi.Schemas.Error403Forbidden;
        }
    }
    namespace PostVisitInteraction {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.UserAgent;
            export type $2 = OCApi.Parameters.AcceptLanguage;
            export type $3 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "actionName": "continue",
         *   "responses": {
         *     "q857": "ihaveneverbeenprescribedtreatmentforthiscondition",
         *     "q858": "yes"
         *   }
         * }
         */
        OCApi.Schemas.InteractionInput;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "stateName": "clinical_interview",
             *   "title": "Interview Question",
             *   "content": [
             *     {
             *       "contentType": "select_input",
             *       "contentName": "q775",
             *       "contentLabel": "<p>Almost done! Photos of the affected area of the skin are required to diagnose and treat you.</p><p><b>Can photos be taken and uploaded at this time?</b></p>",
             *       "options": [
             *         {
             *           "optionLabel": "Yes",
             *           "optionValue": "yes"
             *         },
             *         {
             *           "optionLabel": "No",
             *           "optionValue": "no"
             *         }
             *       ],
             *       "required": true
             *     }
             *   ],
             *   "progress": {
             *     "clinical_interview": {
             *       "percentage": 28.4
             *     }
             *   },
             *   "actions": {
             *     "continue": {
             *       "actionLabel": "Continue"
             *     },
             *     "goBack": {
             *       "actionLabel": "Back"
             *     }
             *   }
             * }
             */
            OCApi.Schemas.Interaction;
            /**
             * Unprocessable Entity
             * example:
             * {
             *   "status": 422,
             *   "errors": [
             *     {
             *       "message": "q884 response is required",
             *       "reason": "q884"
             *     },
             *     {
             *       "message": "q885 response is required",
             *       "reason": "q885"
             *     }
             *   ],
             *   "message": "Unprocessable Entity"
             * }
             */
            export interface $422 {
                status?: number;
                errors?: {
                    message?: string;
                    reason?: string;
                }[];
                message?: string;
            }
        }
    }
    namespace PutAccount {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * The is used to update the user profile.
         *
         * example:
         * {
         *   "hsid": "1234-5678-9012",
         *   "email": "bob@aaol.com",
         *   "phone": "555-555-5555",
         *   "firstName": "Bob",
         *   "lastName": "Frog"
         * }
         */
        OCApi.Schemas.Adb2cClaimsUpdate;
        namespace Responses {
            export interface $201 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $403 = OCApi.Responses.Error403Response;
        }
    }
    namespace PutAccountById {
        namespace Parameters {
            export type $0 = OCApi.Parameters.AccountId;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * The is used to update the account profile.
         *
         * example:
         * {
         *   "fullName": "Muhammad Rehman",
         *   "phone": "(509)530-1766",
         *   "email": "mrehman+1@rvohaealth.com",
         *   "address": {
         *     "id": 2910336,
         *     "address1": "1049 Moore Grove",
         *     "address2": null,
         *     "city": "Minneapolis",
         *     "country": null,
         *     "phone": "(202)345-6789",
         *     "state": "MN",
         *     "zip": "55401",
         *     "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
         *     "latitude": 44.9836543,
         *     "longitude": -93.2693572
         *   }
         * }
         */
        OCApi.Schemas.AccountUpdate;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "email": "bob@aol.com",
             *   "fullName": "Bob Frog",
             *   "insuranceCarrier": "Blue Cross",
             *   "insuranceGroup": "BC-Plus",
             *   "insuranceGroupId": "45-768393F",
             *   "insuranceId": "123485690F",
             *   "mobilePhone": "555.555.5555",
             *   "phone": "123.456.5555",
             *   "smsNotify": true,
             *   "canChangePassword": true,
             *   "profileContent": {
             *     "allergiesLink": "Allergies",
             *     "documentTitle": "Patient Profile",
             *     "medicationsLink": "Medications",
             *     "patientDashboardLink": "Patient Dashboard",
             *     "patientDetailsLink": "Patient Details",
             *     "visitHistoryLink": "Visit History"
             *   },
             *   "accountContent": {
             *     "profilePersonalInformation": "Personal information",
             *     "accountInsuranceInformation": "Insurance information"
             *   },
             *   "address": {
             *     "id": 2910336,
             *     "address1": "1049 Moore Grove",
             *     "address2": null,
             *     "city": "Minneapolis",
             *     "country": null,
             *     "phone": "(202)345-6789",
             *     "state": "MN",
             *     "zip": "55401",
             *     "fullAddress": "1049 Moore Grove,  Minneapolis, MN 55401",
             *     "latitude": 44.9836543,
             *     "longitude": -93.2693572
             *   }
             * }
             */
            OCApi.Schemas.Account;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PutPatientNotification {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        namespace Responses {
            export type $200 = /**
             * Get the user's current notifications
             *
             * example:
             * {
             *   "notifications": [
             *     {
             *       "id": 123,
             *       "title": "You have a provider response available",
             *       "message": "Thank you for using Optum Perks Online Care! Your provider has reviewed your symptoms and created a treatment plan.",
             *       "messageType": null,
             *       "category": "treatment_plan",
             *       "force": true,
             *       "viewedAt": "2025-01-03T22:06:29Z",
             *       "createdAt": "2025-01-03T22:06:29Z",
             *       "updatedAt": "2025-01-03T22:06:29Z",
             *       "notificationLinks": [
             *         {
             *           "id": 123,
             *           "href": "/visits/195020/report",
             *           "label": "View Treatment Plan"
             *         }
             *       ]
             *     }
             *   ]
             * }
             */
            OCApi.Schemas.Notification;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PutSelectPharmacyForVisit {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.PharmacyId;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "pharmacyControlNumber": "CLAIMCR",
         *   "couponId": "005947",
         *   "cardholderId": "APD1066745",
         *   "groupId": "1858CCC"
         * }
         */
        OCApi.Schemas.PharmacySelection;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "isDelivery": true,
             *   "isPickup": true,
             *   "isPricingLowest": true,
             *   "perksId": "00605",
             *   "name": "Apci Choice (Hma 605)",
             *   "location": {
             *     "addressLine1": "TEST MAIN",
             *     "addressLine2": "Suite 102",
             *     "city": "MINNEAPOLIS",
             *     "country": "USA",
             *     "state": "MN",
             *     "zipCode": "55401",
             *     "phoneNumber": "256-555-5555"
             *   },
             *   "businessHours": [
             *     {
             *       "open": {
             *         "day": "Monday",
             *         "time": "8:00"
             *       },
             *       "close": {
             *         "day": "Monday",
             *         "time": "18:00"
             *       }
             *     }
             *   ],
             *   "availableDrugs": [
             *     {
             *       "ndc": "31722092601",
             *       "formulationId": "72162199205",
             *       "name": "Methylphenidate",
             *       "couponId": "005947",
             *       "price": {
             *         "amount": "10.50",
             *         "currency": "USD",
             *         "display": "$10.50"
             *       }
             *     }
             *   ],
             *   "totalPrice": {
             *     "amount": "10.50",
             *     "currency": "USD",
             *     "display": "$10.50"
             *   }
             * }
             */
            OCApi.Schemas.Pharmacy;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PutToken {
        namespace Parameters {
            export type $0 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * example:
         * {
         *   "confirmationToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
         * }
         */
        OCApi.Schemas.TokenVerify;
        namespace Responses {
            export type $200 = /**
             * The token is used to authenticate the user for the duration of the tokenExpires time.
             * The token is used in the header for all requests that require authentication.
             *
             * example:
             * {
             *   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
             *   "tokenExpires": "2024-05-26T10:15:00",
             *   "userId": 987654,
             *   "passwordExpired": false,
             *   "roles": [
             *     "user"
             *   ],
             *   "clinicSerial": "CLN123456789",
             *   "completedProfile": true,
             *   "phoneVerificationRequired": false
             * }
             */
            OCApi.Schemas.Token;
            export type $401 = OCApi.Responses.Error401Response;
        }
    }
    namespace PutUpdatePaymentMethod {
        namespace Parameters {
            export type $0 = OCApi.Parameters.PaymentMethodName;
            export type $1 = OCApi.Parameters.OcpApimSubscriptionKey /* uuid */;
        }
        export type RequestBody = /**
         * See https://docs.stripe.com/api/payment_methods/object
         *
         * example:
         * {
         *   "name": "visa 5555",
         *   "lastFour": "5555",
         *   "fingerprint": "Xt5EWLLDS7FJjR1c",
         *   "expireMonth": 8,
         *   "expireYear": 2025
         * }
         */
        OCApi.Schemas.PaymentMethod;
        namespace Responses {
            export type $200 = /**
             * See https://docs.stripe.com/api/payment_methods/object
             *
             * example:
             * {
             *   "name": "visa 5555",
             *   "lastFour": "5555",
             *   "fingerprint": "Xt5EWLLDS7FJjR1c",
             *   "expireMonth": 8,
             *   "expireYear": 2025
             * }
             */
            OCApi.Schemas.PaymentMethod;
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
    namespace PutVisitSendPrescription {
        namespace Parameters {
            export type $0 = OCApi.Parameters.VisitId /* uuid */;
            export type $1 = OCApi.Parameters.PharmacyId;
        }
        export type RequestBody = /**
         * It includes the discount coupons details.
         *
         * example:
         * {
         *   "pcn": "CLAIMCR",
         *   "bin": "005947",
         *   "uid": "APD1066745",
         *   "grp": "1858CCC"
         * }
         */
        OCApi.Schemas.DiscountCard;
        namespace Responses {
            export interface $204 {
            }
            export type $401 = OCApi.Responses.Error401Response;
            export type $404 = OCApi.Responses.Error404Response;
        }
    }
}
